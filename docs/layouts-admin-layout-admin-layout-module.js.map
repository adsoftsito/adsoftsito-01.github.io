{"version":3,"sources":["./src/app/lineas/lineas.component.css","./src/app/listascompra/listascompra.component.html","./src/app/facturacion/facturacion.component.css","./src/models/cfdi40/receptor40.ts","./src/app/cart/cart.component.css","./src/app/lineas/lineas.component.html","./src/app/cfdi/cfdi.component.html","./src/app/new-client/new-client.component.css","./src/app/new-client/new-client.component.ts","./src/app/new-linea/new-linea.component.css","./src/models/cfdi40/traslado40.ts","./src/app/configuracion/configuracion.component.html","./src/models/productapi.ts","./src/app/proveedores/proveedores.component.ts","./src/app/facturacion/facturacion.component.html","./src/app/new-linea/new-linea.component.ts","./src/models/cfdi40/conceptoimpuestos40.ts","./src/app/marcas/marcas.component.html","./src/app/new-product/new-product.component.css","./src/app/cfdi/cfdi.component.ts","./src/app/clientes/clientes.component.css","./src/app/dashboard/dashboard.component.html","./src/services/file-upload.service.ts","./src/app/compras/compras.component.css","./src/models/cfdi40/cfdi40.ts","./src/models/cfdi33/emisor33.ts","./src/app/layouts/admin-layout/admin-layout.module.ts","./src/app/new-marca/new-marca.component.css","./src/services/graphql.lines.service.ts","./src/app/cart/cart.component.html","./src/app/configuracion/configuracion.component.css","./src/app/new-marca/new-marca.component.ts","./src/models/cfdi33/receptor33.ts","./src/app/listas/listas.component.css","./src/app/listas/listas.component.ts","./src/app/dashboard/dashboard.component.ts","./src/app/new-marca/new-marca.component.html","./src/models/cfdi33/cfdi33.ts","./src/app/dashboard/dashboard.component.css","./src/app/configuracion/configuracion.component.ts","./src/app/proveedores/proveedores.component.html","./src/app/lineas/lineas.component.ts","./src/app/new-linea/new-linea.component.html","./src/app/new-product/validate.ts","./src/app/cart/cart.component.ts","./src/models/cfdi40/emisor40.ts","./src/app/new-product/new-product.component.ts","./src/models/cfdi33/conceptoimpuestos33.ts","./src/models/lineaapi.ts","./src/app/clientes/clientes.component.ts","./src/services/graphql.catalogos.service.ts","./src/app/new-client/new-client.component.html","./src/app/marcas/marcas.component.css","./src/app/cfdi/cfdi.component.css","./src/services/graphql.marcas.service.ts","./src/app/listascompra/listascompra.component.ts","./src/app/proveedores/proveedores.component.css","./src/app/new-product/new-product.component.html","./src/models/file-upload.ts","./src/app/layouts/admin-layout/admin-layout.routing.ts","./src/services/graphql.listas.service.ts","./src/app/facturacion/facturacion.component.ts","./src/app/listas/listas.component.html","./src/app/listascompra/listascompra.component.css","./src/app/clientes/clientes.component.html","./src/app/compras/compras.component.ts","./src/models/marcaapi.ts","./src/services/graphql.proveedores.service.ts","./src/models/cfdi40/concepto40.ts","./src/models/cfdi40/cfdiimpuestos40.ts","./src/services/graphql.clients.service.ts","./src/app/compras/compras.component.html","./src/app/marcas/marcas.component.ts"],"names":[],"mappings":"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","file":"layouts-admin-layout-admin-layout-module.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpbmVhcy9saW5lYXMuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        \\r\\n        <div class=\\\"input-group no-border\\\">\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"valor\\\" name=\\\"valor\\\" class=\\\"form-control\\\" placeholder=\\\"Buscar cliente, serie, folio, importe ...\\\">\\r\\n            <button mat-raised-button (click)=\\\"search()\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n                <i class=\\\"material-icons\\\">search</i>\\r\\n                <div class=\\\"ripple-container\\\"></div>\\r\\n            </button>\\r\\n            \\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n       \\r\\n            <div class=\\\"col-lg-12 col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-warning\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Listas de Compra - \\r\\n                        \\r\\n                        <a  [routerLink]=\\\"['/admin/admin/new-product']\\\">\\r\\n                           <b> Crear lista compra  </b>\\r\\n                        <i class=\\\"material-icons\\\">login</i>\\r\\n                           \\r\\n                        </a>\\r\\n                        </h4>\\r\\n                        \\r\\n                    </div>\\r\\n                    <div class=\\\"card-body table-responsive\\\">\\r\\n                        <table class=\\\"table table-hover\\\">\\r\\n                            <thead class=\\\"text-warning\\\">\\r\\n                                <th>Clave</th>\\r\\n                                <th>Nombre</th>\\r\\n                                <th>Descuento</th>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let product of posts\\\" >\\r\\n                                    <td>{{ product.id }}</td>\\r\\n                                    <td>{{ product.descripcion }}</td>\\r\\n                                    <td>{{ product.descuento }}</td>\\r\\n                                </tr>\\r\\n                              \\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZhY3R1cmFjaW9uL2ZhY3R1cmFjaW9uLmNvbXBvbmVudC5jc3MifQ== */\";","export class Receptor40 {\r\n    rfc : string;\r\n    nombre : string;\r\n    usocfdi : string;\r\n    regimenfiscalreceptor : string;\r\n    domiciliofiscalreceptor : string;\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcnQvY2FydC5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        \\n        <div class=\\\"input-group no-border\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"valor\\\" name=\\\"valor\\\" class=\\\"form-control\\\" placeholder=\\\"Buscar cliente, serie, folio, importe ...\\\">\\n            <button mat-raised-button (click)=\\\"search()\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\n                <i class=\\\"material-icons\\\">search</i>\\n                <div class=\\\"ripple-container\\\"></div>\\n            </button>\\n            \\n        </div>\\n        <div class=\\\"row\\\">\\n       \\n            <div class=\\\"col-lg-12 col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-warning\\\">\\n                        <h4 class=\\\"card-title\\\">Lineas - \\n                        \\n                        <a  [routerLink]=\\\"['/admin/admin/new-linea/0']\\\">\\n                           <b> Crear linea nueva  </b>\\n                        <i class=\\\"material-icons\\\">login</i>\\n                           \\n                        </a>\\n                        </h4>\\n                        \\n                    </div>\\n                    <div class=\\\"card-body table-responsive\\\">\\n                        <table class=\\\"table table-hover\\\">\\n                            <thead class=\\\"text-warning\\\">\\n                                <th>Clave</th>\\n                                <th>Descripcion</th>\\n                                <th>Acciones</th>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let linea of posts\\\" >\\n                                    <td>{{ linea.id }}</td>\\n                                    <td>{{ linea.description }}</td>\\n                                    <td>\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" (click)=\\\"updateThisLinea(linea.id,linea.description)\\\">Actualizar</button>\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"deleteThisLinea(linea.id)\\\">Eliminar</button>\\n                                    </td>\\n                                </tr>\\n                              \\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n  </div>\\n  \";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-danger\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Timbrado de CFDi - <b>Serie/Folio {{ sale.serie}}{{ sale.folio}}  - Importe: {{ sale.total}} </b></h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <form>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                \\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    Forma de pago\\r\\n                                      <select\\r\\n                                        class=\\\"form-select form-select-sm form-control\\\"\\r\\n                                        name=\\\"myformapago\\\"\\r\\n                                        [(ngModel)]=\\\"myformapago\\\"\\r\\n                                      >\\r\\n                                      <option value=\\\"01\\\">01 - Efectivo</option>\\r\\n                                        <option\\r\\n                                          [value]=\\\"codigoSat.formapago\\\"\\r\\n                                          *ngFor=\\\"let codigoSat of formapago\\\"\\r\\n                                        >\\r\\n                                        {{ codigoSat.formapago }} -\\r\\n                                        {{ codigoSat.descripcion }}\\r\\n                                        </option>\\r\\n                                      </select>\\r\\n                  \\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                Condiciones pago\\r\\n                                  \\r\\n                                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                  <input\\r\\n                                    matInput\\r\\n                                    placeholder=\\\"Condiciones de pago\\\"\\r\\n                                    type=\\\"text\\\"\\r\\n                                    [(ngModel)]=\\\"mycondicionespago\\\"\\r\\n                                    name=\\\"mycondicionespago\\\"\\r\\n                                  />\\r\\n                                </mat-form-field>\\r\\n                                  \\r\\n              \\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            Metodo pago\\r\\n                              <select\\r\\n                                class=\\\"form-select form-select-sm form-control\\\"\\r\\n                                name=\\\"mymetodopago\\\"\\r\\n                                [(ngModel)]=\\\"mymetodopago\\\"\\r\\n                              >\\r\\n                              <option value=\\\"PUE\\\">PUE - Pago en una sola exhibicion</option>\\r\\n                                <option\\r\\n                                  [value]=\\\"codigoSat.metodopago\\\"\\r\\n                                  *ngFor=\\\"let codigoSat of metodopago\\\"\\r\\n                                >\\r\\n                                {{ codigoSat.metodopago }} - {{ codigoSat.descripcion }}\\r\\n                                </option>\\r\\n                              </select>\\r\\n          \\r\\n                    </div>\\r\\n                   \\r\\n                            </div>\\r\\n                           \\r\\n                            <!--\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"Codigo Postal\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-warning pull-right\\\">Buscar</button>\\r\\n\\r\\n                                  </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"Colonia\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"Estado\\\" type=\\\"email\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"Municipio\\\" type=\\\"email\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                           \\r\\n                            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-info pull-right\\\">Actualizar Receptor</button>\\r\\n                            <div class=\\\"clearfix\\\"></div>\\r\\n                        -->\\r\\n                        </form>\\r\\n\\r\\n                        <div class=\\\"card-body table-responsive\\\">\\r\\n                          <table class=\\\"table table-hover\\\">\\r\\n                              <thead class=\\\"text-warning\\\">\\r\\n                                  \\r\\n                                  <th>No Ident</th>\\r\\n                                  <th>Clave Sat</th>\\r\\n                                  <th>Cantidad</th>\\r\\n                                  <th>Unidad</th>\\r\\n                                  <th>Descripcion</th>\\r\\n                                  <th>Precio</th>\\r\\n                                  <th>Importe</th>\\r\\n                                  \\r\\n                                  \\r\\n                              </thead>\\r\\n                              <tbody>\\r\\n                                  <tr *ngFor=\\\"let product of conceptos\\\" >\\r\\n                                      <td>{{ product.product.noidentificacion }}</td>\\r\\n                                      <td>{{ product.product.codigosat.claveprodserv }}</td>\\r\\n                                      <td>{{ product.cantidad }}</td>\\r\\n                                      <td>{{ product.product.claveunidad.nombre }}</td>\\r\\n                                      <td>{{ product.product.description }}</td>\\r\\n                                      \\r\\n                                      <td>{{ product.precio }}</td>\\r\\n                                      <td>{{ product.importe }}</td>\\r\\n                                     <!-- <td>\\r\\n  \\r\\n                                          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin/admin/cfdi/' + product.id]\\\">\\r\\n                                              <i class=\\\"material-icons\\\">login</i>\\r\\n                                              \\r\\n                                          </a>\\r\\n  \\r\\n                                      </td> -->\\r\\n                                  </tr>\\r\\n                                \\r\\n                              </tbody>\\r\\n                          </table>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n           \\r\\n        </div>\\r\\n    </div>\\r\\n \\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-warning\\\">\\r\\n                        <h4 class=\\\"card-title\\\"> Datos del <b>RECEPTOR</b></h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <form>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"RFC\\\" \\r\\n                                      name=\\\"rfc\\\"\\r\\n                                      [(ngModel)]=\\\"rfc\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\">\\r\\n                                  \\r\\n                                  <button\\r\\n                                  mat-raised-button\\r\\n                                  type=\\\"button\\\"\\r\\n                                  style=\\\"float: right\\\"\\r\\n                                  class=\\\"btn btn-sm bg-primary\\\"\\r\\n                                  (click)=\\\"searchReceptor()\\\"\\r\\n                                >\\r\\n                                  <i class=\\\"material-icons\\\">search</i>\\r\\n                                </button>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                  <select\\r\\n                                    class=\\\"form-select form-select-sm form-control\\\"\\r\\n                                    name=\\\"codigoSatSeleccionado\\\"\\r\\n                                    [(ngModel)]=\\\"codigoSatSeleccionado\\\"\\r\\n                                    (ngModelChange)=\\\"setReceptor($event)\\\"\\r\\n                                  >\\r\\n                                  <option value=\\\"01010101\\\">Elija un receptor</option>\\r\\n                                    <option\\r\\n                                      [value]=\\\"myreceptor.id\\\"\\r\\n                                      *ngFor=\\\"let myreceptor of receptor\\\"\\r\\n                                    >\\r\\n                                      {{ myreceptor.nombre }}\\r\\n                                    </option>\\r\\n                                  </select>\\r\\n                                \\r\\n\\r\\n\\r\\n\\r\\n                                  </div>\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"Nombre\\\"\\r\\n                                      name=\\\"nombre\\\"\\r\\n                                      [(ngModel)]=\\\"nombre\\\"\\r\\n                                      >\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\">\\r\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"Email\\\" type=\\\"email\\\"\\r\\n                                      name=\\\"email\\\"\\r\\n                                      [(ngModel)]=\\\"email\\\"\\r\\n                                      >\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <select\\r\\n                                      class=\\\"form-select form-select-sm form-control\\\"\\r\\n                                      name=\\\"myusocfdi\\\"\\r\\n                                      [(ngModel)]=\\\"myusocfdi\\\"\\r\\n                                    >\\r\\n                                    <option value=\\\"G03\\\">Uso CFDi</option>\\r\\n                                      <option\\r\\n                                        [value]=\\\"cfdi.usocfdi\\\"\\r\\n                                        *ngFor=\\\"let cfdi of usocfdi\\\"\\r\\n                                      >\\r\\n                                      {{ cfdi.usocfdi }} - {{ cfdi.descripcion }}\\r\\n                                      </option>\\r\\n                                    </select>\\r\\n                \\r\\n                          </div>\\r\\n                            </div>\\r\\n                           \\r\\n                            <div class=\\\"row\\\">\\r\\n                                \\r\\n                              <div class=\\\"col-md-2\\\">\\r\\n                                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                    <input matInput placeholder=\\\"Codigo Postal\\\"\\r\\n                                    name=\\\"codigopostal\\\"\\r\\n                                    [(ngModel)]=\\\"codigopostal\\\"\\r\\n                                    >\\r\\n                                  </mat-form-field>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-md-1\\\">\\r\\n                                \\r\\n                                <button\\r\\n                                mat-raised-button\\r\\n                                type=\\\"button\\\"\\r\\n                                style=\\\"float: right\\\"\\r\\n                                class=\\\"btn btn-sm bg-primary\\\"\\r\\n                                (click)=\\\"searchCodigoPostal()\\\"\\r\\n                              >\\r\\n                                <i class=\\\"material-icons\\\">search</i>\\r\\n                              </button>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-md-3\\\">\\r\\n                                <select\\r\\n                                  class=\\\"form-select form-select-sm form-control\\\"\\r\\n                                  name=\\\"codigoSatSeleccionado\\\"\\r\\n                                  [(ngModel)]=\\\"codigoSatSeleccionado\\\"\\r\\n                                >\\r\\n                                <option value=\\\"01010101\\\">Elija un código</option>\\r\\n                                  <option\\r\\n                                    [value]=\\\"codigoSat.id\\\"\\r\\n                                    *ngFor=\\\"let codigoSat of colonias\\\"\\r\\n                                  >\\r\\n                                    {{ codigoSat.nombreAsentamiento }}\\r\\n                                  </option>\\r\\n                                </select>\\r\\n                              \\r\\n\\r\\n\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"Direccion\\\" \\r\\n                                      name=\\\"direccion\\\"\\r\\n                                      [(ngModel)]=\\\"direccion\\\"\\r\\n                                    \\r\\n                                      >\\r\\n\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"Estado\\\" type=\\\"email\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\">\\r\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"Municipio\\\" type=\\\"email\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                           \\r\\n                            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-info pull-right\\\">Actualizar Receptor</button>\\r\\n                            <div class=\\\"clearfix\\\"></div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n           \\r\\n        </div>\\r\\n    </div>\\r\\n    <!--\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-info\\\">\\r\\n                        <h4 class=\\\"card-title\\\">CFDi - Complementos <b>(Opcional)</b></h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <form>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-5\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"Seleccione complemento\\\" >\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"getCfdi()\\\">Configurar Complemento</button>\\r\\n\\r\\n                                </div>\\r\\n                                \\r\\n                            </div>\\r\\n                            \\r\\n                            \\r\\n                            \\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n           \\r\\n        </div>\\r\\n    </div>\\r\\n-->\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                <!--\\r\\n                    <div class=\\\"card-header card-header-info\\\">\\r\\n                        <h4 class=\\\"card-title\\\"><b>Confirma timbrado de CFDi</b></h4>\\r\\n                    </div>\\r\\n                -->\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <b>Confirma timbrado de CFDi</b> <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\" (click)=\\\"getCfdi()\\\">Timbrar CFDi</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n           \\r\\n        </div>\\r\\n    </div>\\r\\n  \\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy1jbGllbnQvbmV3LWNsaWVudC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-new-client',\r\n  templateUrl: './new-client.component.html',\r\n  styleUrls: ['./new-client.component.css']\r\n})\r\nexport class NewClientComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy1saW5lYS9uZXctbGluZWEuY29tcG9uZW50LmNzcyJ9 */\";","export class Traslado40 {\r\n    base: string;\r\n    impuesto : string;\r\n    tipofactor : string;\r\n    tasaocuota : string;\r\n    importe : string;\r\n}","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-danger\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Edit Configuracion</h4>\\r\\n                        <p class=\\\"card-category\\\">Complete your profile</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <form>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-5\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"Company (disabled)\\\" disabled>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"Username\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"Email address\\\" type=\\\"email\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                    <input matInput placeholder=\\\"Fist Name\\\" type=\\\"text\\\">\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                    <input matInput placeholder=\\\"Last Name\\\" type=\\\"text\\\">\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                    <input matInput placeholder=\\\"Adress\\\" type=\\\"text\\\">\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                    <input matInput placeholder=\\\"City\\\" type=\\\"text\\\">\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                    <input matInput placeholder=\\\"Country\\\" type=\\\"text\\\">\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                    <input matInput placeholder=\\\"Postal Code\\\" type=\\\"text\\\">\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                  <label>About Me</label>\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                     <textarea matInput placeholder=\\\"Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.\\\"></textarea>\\r\\n                                   </mat-form-field>\\r\\n                                    <!-- <div class=\\\"form-group\\\">\\r\\n  \\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label class=\\\"bmd-label-floating\\\"> Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.</label>\\r\\n                                            <textarea class=\\\"form-control\\\" rows=\\\"5\\\"></textarea>\\r\\n                                        </div>\\r\\n                                    </div> -->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\">Update Profile</button>\\r\\n                            <div class=\\\"clearfix\\\"></div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n           \\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";","export class ProductApi {\r\n \r\n\turl\t:  string;\r\n\tid  : number;\r\n\tnoidentificacion : string;\r\n\tprecio : number;\r\n\tdescuento : number;\r\n\tretencionieps : number;\r\n\tretencioniva : number;\r\n\tretencionisr : number;\r\n\ttrasladoiva : number;\r\n\ttrasladoieps : number;\r\n\tcodigobarras : string;\r\n\texistencias : number;\r\n\tstockmin : number;\r\n\tstockmax : number;\r\n\tcodigosat : number;\r\n\tclaveunidad : number;\r\n\tmodelo : string;\r\n\tdescription : string;\r\n\tmarca : number;\r\n\tlinea : number;\r\n}  ","import { Component, OnInit } from '@angular/core';\r\nimport { GraphqlProveedoresService} from '../../services/graphql.proveedores.service';\r\nimport { StorageService } from \"../../services/storage.service\";\r\n\r\n@Component({\r\n  selector: 'app-proveedores',\r\n  templateUrl: './proveedores.component.html',\r\n  styleUrls: ['./proveedores.component.css']\r\n})\r\nexport class ProveedoresComponent implements OnInit {\r\n\r\n      loading: boolean;\r\n      posts: any;\r\n      //private querySubscription: Subscription;\r\n      user: string;\r\n      token: string;\r\n      valor: string;\r\n    \r\n      constructor(private graphqlProveedoresService: GraphqlProveedoresService,\r\n                  private storageService : StorageService\r\n                  ) \r\n                 {}\r\n    \r\n      ngOnInit() {\r\n        this.user = this.storageService.getSession(\"user\");\r\n        this.token = this.storageService.getSession(\"token\");\r\n       this.buscar(\"*\");\r\n      }\r\n    \r\n      search()\r\n      {\r\n        //alert(this.valor);\r\n        this.buscar(this.valor);\r\n      }\r\n    \r\n      buscar(valor :string) {\r\n        //this.posts = [];\r\n        console.log(this.token);\r\n        console.log(valor);\r\n    \r\n        this.graphqlProveedoresService.proveedores(this.token, valor)\r\n        .subscribe(({ data, loading }) => {\r\n          this.loading = loading;\r\n          this.posts = JSON.parse(JSON.stringify(data)).proveedores;\r\n          console.log(JSON.stringify(this.posts))\r\n        });\r\n      }\r\n    \r\n      ngOnDestroy() {\r\n    \r\n      }\r\n      \r\n    }\r\n    ","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <!--\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin/admin/new-product']\\\">\\r\\n            <i class=\\\"material-icons\\\">login</i>\\r\\n            <p>\\r\\n                <span class=\\\"d-lg-none d-md-block\\\">Account</span>\\r\\n            </p>\\r\\n        </a> -->\\r\\n\\r\\n        <div class=\\\"input-group no-border\\\">\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"valor\\\" name=\\\"valor\\\" class=\\\"form-control\\\" placeholder=\\\"Buscar cliente, serie, folio, importe ...\\\">\\r\\n            <button mat-raised-button (click)=\\\"search()\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n                <i class=\\\"material-icons\\\">search</i>\\r\\n                <div class=\\\"ripple-container\\\"></div>\\r\\n            </button>\\r\\n            \\r\\n        </div>\\r\\n         \\r\\n        <div class=\\\"row\\\">\\r\\n       \\r\\n            <div class=\\\"col-lg-12 col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-warning\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Facturacion</h4>\\r\\n                        <p class=\\\"card-category\\\">New employees on 15th September, 2016</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body table-responsive\\\">\\r\\n                        <table class=\\\"table table-hover\\\">\\r\\n                            <thead class=\\\"text-warning\\\">\\r\\n                                \\r\\n                                <th>Id</th>\\r\\n                                <th>Ser/Folio</th>\\r\\n                                <th>Importe</th>\\r\\n                                <th>RFC</th>\\r\\n                                <th>Cliente</th>\\r\\n                                <th>Status</th>\\r\\n                                <th>Xml</th>\\r\\n                                <th>Pdf</th>\\r\\n\\r\\n                                <th>Actions</th>\\r\\n                                \\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let product of posts\\\" >\\r\\n                                    <td>{{ product.id }}</td>\\r\\n                                    <td>{{ product.folio }}/{{ product.folio }}</td>\\r\\n                                    <td>{{ product.total }}</td>\\r\\n                                    <td>{{ product.receptor.rfc }}</td>\\r\\n                                    <td>{{ product.receptor.nombre }}</td>\\r\\n                                    <td>{{ product.statuscfdi }}</td>\\r\\n                                    <td> <a href={{product.xml}} target=\\\"_blank\\\"> ver xml</a></td>\\r\\n                                    <td> <a href={{product.pdf}} target=\\\"_blank\\\"> ver pdf</a></td>\\r\\n                                    <td>\\r\\n\\r\\n                                        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin/admin/cfdi/' + product.id]\\\">\\r\\n                                            <i class=\\\"material-icons\\\">login</i>\\r\\n                                            \\r\\n                                        </a>\\r\\n\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                              \\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";","import { Component, OnInit, ApplicationRef } from \"@angular/core\";\r\nimport { MarcaApi } from \"../../models/marcaapi\";\r\nimport { GraphqlLineasService } from \"../../services/graphql.lines.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { StorageService } from \"../../services/storage.service\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormArray, AbstractControl } from '@angular/forms';\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-linea',\r\n  templateUrl: './new-linea.component.html',\r\n  styleUrls: ['./new-linea.component.css']\r\n})\r\n\r\nexport class NewLineaComponent { //hay que importarlo en el admin-layouut.modeil.ts\r\n  myLinea = new MarcaApi();\r\n  mytoken: any;\r\n  loading: boolean;\r\n  posts: any;\r\n  valor: string;\r\n\r\n  validation: FormGroup;\r\n\r\n  event;\r\n\r\n  mode = 'create | update'\r\n\r\n  constructor(\r\n    private graphqlLinea: GraphqlLineasService,\r\n    private graphqlLineasService: GraphqlLineasService,\r\n    private router: Router,\r\n    private storageService: StorageService,\r\n    private appRef: ApplicationRef,\r\n    private route: ActivatedRoute,\r\n\r\n    private fb: FormBuilder,\r\n  ) \r\n  \r\n  {\r\n    this.route.params.subscribe(   \r\n      res => {\r\n\r\n        if(res.id == 0){\r\n          this.mode = 'create';\r\n        }else if(res.id != 0){\r\n          this.mode = 'update';\r\n        }\r\n\r\n        console.log(res);\r\n        this.myLinea.id = res.id;\r\n        this.valor = res.id;\r\n        \r\n\r\n        if (this.myLinea.id > 0)  // is update option\r\n        {\r\n          this.mytoken = this.storageService.getSession(\"token\");\r\n\r\n          this.getLineaById(this.myLinea.id);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mytoken = this.storageService.getSession(\"token\");\r\n    this.createForm()\r\n  }\r\n\r\n  createForm(){\r\n    this.validation = this.fb.group({\r\n      //id: [\"\",Validators.required],\r\n      description: [\"\", Validators.required]\r\n    })\r\n  }\r\n\r\n  get r() { return this.validation.controls; }\r\n\r\n\r\n  //redireccionamiento\r\n  getLineaById(id) {\r\n    \r\n    this.graphqlLineasService.linea(this.mytoken, id)\r\n    .subscribe(({ data, loading }) => {\r\n      \r\n      this.loading = loading;\r\n      this.posts = JSON.parse(JSON.stringify(data)).linea;\r\n      //console.log(\"Recuperado: \",JSON.stringify(this.posts))\r\n\r\n      //***Actualiza y llena los campos de id y descripcion con el patch***** */\r\n      this.validation.patchValue({\r\n        id: this.posts.id,\r\n        description: this.posts.description\r\n      })\r\n      \r\n    });\r\n\r\n  }\r\n\r\n  Linea() {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: 'btn btn-success',\r\n        cancelButton: 'btn btn-danger'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n\r\n    if(this.mode == 'create'){\r\n\r\n      if (this.validation.valid) {\r\n\r\n        swalWithBootstrapButtons.fire({\r\n          title: '¿Estas seguro de crear esta línea?',\r\n          text: \"No podrás deshacer los cambios.\",\r\n          icon: 'warning',\r\n          showCancelButton: true,\r\n          confirmButtonText: 'Si, crear',\r\n          cancelButtonText: 'No, cancelar',\r\n          reverseButtons: true\r\n        }).then((result) => {\r\n\r\n          if(result.isConfirmed){\r\n            /**Implemente code here */\r\n\r\n            let saveValue;\r\n            saveValue = new MarcaApi(this.validation.value);\r\n            saveValue.id = 0\r\n      \r\n            this.graphqlLinea\r\n              .createLinea(\r\n                this.mytoken,\r\n                saveValue.description,\r\n                saveValue.id\r\n              )\r\n              .subscribe(\r\n                ({ data }) => {\r\n    \r\n                  this.router.navigate([\"/admin/admin/lineas\"]);\r\n                  this.appRef.tick();\r\n                  //this.posts = undefined;\r\n                },\r\n                (error) => {\r\n                  console.error(\"there was an error sending the query\", error);\r\n                },\r\n              );\r\n\r\n            swalWithBootstrapButtons.fire(\r\n              'Nueva linea creada!',\r\n              'linea creada correctamente',\r\n              'success'\r\n            )\r\n          }else if (\r\n            result.dismiss === Swal.DismissReason.cancel\r\n          ){\r\n            swalWithBootstrapButtons.fire(\r\n              'Cancelado',\r\n              'Operración cancelada',\r\n              'error'\r\n            )\r\n          }\r\n\r\n        })\r\n      }else{\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Campo vacio!',\r\n          text: 'Introduzca dato valido!',\r\n        })\r\n      }\r\n  \r\n    }else if(this.mode == 'update'){\r\n      this.posts.description = (this.posts.description);\r\n      this.posts.id = (this.posts.id);\r\n  \r\n\r\n      if (\r\n        this.validation.valid\r\n      ) {\r\n        /**implement here swet alert */\r\n        swalWithBootstrapButtons.fire({\r\n          title: '¿Estas seguro de actualizar esta Linea?',\r\n          text: \"No podrás deshacer los cambios.\",\r\n          icon: 'warning',\r\n          showCancelButton: true,\r\n          confirmButtonText: 'Si, actualizar',\r\n          cancelButtonText: 'No, cancelar',\r\n          reverseButtons: true\r\n        }).then((result) => {\r\n          if(result.isConfirmed){\r\n            let saveValue;\r\n            saveValue = new MarcaApi(this.validation.value);\r\n            saveValue.id = this.posts.id;\r\n      \r\n            this.graphqlLinea\r\n              .createLinea(\r\n                this.mytoken,\r\n                saveValue.description,\r\n                saveValue.id\r\n              )\r\n              .subscribe(\r\n                ({ data }) => {\r\n                  this.router.navigate([\"/admin/admin/lineas\"]);\r\n                  this.appRef.tick();\r\n\r\n                  swalWithBootstrapButtons.fire(\r\n                    'Linea Modificada!',\r\n                    'Linea Modificada correctamente',\r\n                    'success'\r\n                  )\r\n                },\r\n                (error) => {  \r\n              },\r\n            );\r\n          }else if(\r\n            result.dismiss === Swal.DismissReason.cancel\r\n          ) {\r\n            swalWithBootstrapButtons.fire(\r\n              'Cancelado',\r\n              'Operración cancelada',\r\n              'error'\r\n            )\r\n          }\r\n        })\r\n      } else {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Campo vacio!',\r\n          text: 'Introduzca dato válido!',\r\n        })\r\n      }\r\n  \r\n    }\r\n  }\r\n\r\n  \r\n  clearFieldsMarca() {\r\n    this.event.srcElement.value = null;\r\n    this.myLinea.description = \"\";\r\n  }\r\n\r\n  dataConversion() {\r\n    if (this.posts.description == this.posts.description.toString())\r\n      this.posts.description = this.posts.description.toString();\r\n\r\n  }\r\n\r\n}\r\n","import { Retencion40 } from \"./retencion40\";\r\nimport { Traslado40 } from \"./traslado40\"\r\n\r\nexport class ConceptoImpuestos40 {\r\n   traslados : Traslado40[];\r\n   retenciones : Retencion40[];\r\n}","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        \\r\\n        <div class=\\\"input-group no-border\\\">\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"valor\\\" name=\\\"valor\\\" class=\\\"form-control\\\" placeholder=\\\"Buscar cliente, serie, folio, importe ...\\\">\\r\\n            <button mat-raised-button (click)=\\\"search()\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n                <i class=\\\"material-icons\\\">search</i>\\r\\n                <div class=\\\"ripple-container\\\"></div>\\r\\n            </button>\\r\\n            \\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n       \\r\\n            <div class=\\\"col-lg-12 col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-warning\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Marcas - \\r\\n                        \\r\\n                        <a  [routerLink]=\\\"['/admin/admin/new-marca/0']\\\">\\r\\n                           <b> Crear marca nuevo  </b>\\r\\n                        <i class=\\\"material-icons\\\">login</i>\\r\\n                           \\r\\n                        </a>\\r\\n                        </h4>\\r\\n                        \\r\\n                    </div>\\r\\n                    <div class=\\\"card-body table-responsive\\\">\\r\\n                        <table class=\\\"table table-hover\\\">\\r\\n                            <thead class=\\\"text-warning\\\">\\r\\n                                <th>Clave</th>\\r\\n                                <th>Descripcion</th>\\r\\n                                <th>Acciones</th>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let product of posts\\\" >\\r\\n                                    <td>{{ product.id }}</td>\\r\\n                                    <td>{{ product.description }}</td>\\r\\n                                    <td>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" (click)=\\\"updateThisMarca(product.id,product.description)\\\">Actualizar</button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"deleteThisMarca(product.id)\\\">Eliminar</button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                              \\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";","export default \".error{\\n    height: 40px;\\n    line-height: 40px;\\n    background: #F66060;\\n    padding: 0 5px;\\n    border-radius: 10px;\\n    color: #FFFFFF;\\n    box-shadow: 25px;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmV3LXByb2R1Y3QvbmV3LXByb2R1Y3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsbUJBQW1CO0lBQ25CLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsY0FBYztJQUNkLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL25ldy1wcm9kdWN0L25ldy1wcm9kdWN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3J7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGxpbmUtaGVpZ2h0OiA0MHB4O1xuICAgIGJhY2tncm91bmQ6ICNGNjYwNjA7XG4gICAgcGFkZGluZzogMCA1cHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICBib3gtc2hhZG93OiAyNXB4O1xufVxuXG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { CfdiService } from '../../services/cfdi.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GraphqlSalesService } from '../../services/graphql.sales.service';\r\nimport { StorageService } from \"../../services/storage.service\";\r\nimport { GraphqlCatalogosService } from '../../services/graphql.catalogos.service';\r\nimport { GraphqlClientsService } from '../../services/graphql.clients.service';\r\n\r\nimport { Cfdi33 } from \"../../models/cfdi33/cfdi33\";\r\nimport { Emisor33 } from \"../../models/cfdi33/emisor33\";\r\nimport { Receptor33 } from \"../../models/cfdi33/receptor33\";\r\nimport { Concepto33 } from \"../../models/cfdi33/concepto33\";\r\nimport { ConceptoImpuestos33 } from \"../../models/cfdi33/conceptoimpuestos33\";\r\nimport { Traslado33 } from 'models/cfdi33/traslado33';\r\nimport { Retencion33 } from 'models/cfdi33/retencion33';\r\nimport { CfdiImpuestos33 } from 'models/cfdi33/cfdiimpuestos33';\r\n\r\nimport { Cfdi40 } from \"../../models/cfdi40/cfdi40\";\r\nimport { Emisor40 } from \"../../models/cfdi40/emisor40\";\r\nimport { Receptor40 } from \"../../models/cfdi40/receptor40\";\r\nimport { Concepto40 } from \"../../models/cfdi40/concepto40\";\r\nimport { ConceptoImpuestos40 } from \"../../models/cfdi40/conceptoimpuestos40\";\r\nimport { Traslado40 } from 'models/cfdi40/traslado40';\r\nimport { Retencion40 } from 'models/cfdi40/retencion40';\r\nimport { CfdiImpuestos40 } from 'models/cfdi40/cfdiimpuestos40';\r\n\r\n@Component({\r\n  selector: 'app-cfdi',\r\n  templateUrl: './cfdi.component.html',\r\n  styleUrls: ['./cfdi.component.css']\r\n})\r\nexport class CfdiComponent implements OnInit {\r\n\r\n  loading: boolean;\r\n  token : string;\r\n  sale : any;\r\n  emisor : any;\r\n  receptor : any;\r\n  usocfdi : any;\r\n  metodopago : any;\r\n  formapago : any;\r\n  condicionespago : any;\r\n  conceptos : any;\r\n  colonias : any;\r\n\r\n  myusocfdi : string;\r\n  mymetodopago : string;\r\n  myformapago : string;\r\n  mycondicionespago : string;\r\n\r\n  rfc : string;\r\n  nombre : string;\r\n  direccion : string;\r\n\r\n  email : string;\r\n  usocfdireceptor : string;\r\n  codigopostal : string;\r\n\r\n  // cfdi 33\r\n  cfdi33 = new Cfdi33;\r\n  emisor33 = new Emisor33;\r\n  receptor33 = new Receptor33;\r\n  concepto33 : Concepto33;\r\n  conceptoimpuestos33 = new ConceptoImpuestos33;\r\n  cfdiimpuestos33 : CfdiImpuestos33;\r\n  conceptos33 = [];\r\n  traslado33 : Traslado33;\r\n  retencion33 : Retencion33;\r\n\r\n  \r\n  // cfdi 40\r\n  cfdi40 = new Cfdi40;\r\n  emisor40 = new Emisor40;\r\n  receptor40 = new Receptor40;\r\n  concepto40 : Concepto40;\r\n  conceptoimpuestos40 = new ConceptoImpuestos40;\r\n  cfdiimpuestos40 : CfdiImpuestos40;\r\n  conceptos40 = [];\r\n  traslados = [];\r\n  retenciones = [];\r\n  traslado40 : Traslado40;\r\n  retencion40 : Retencion40;\r\n\r\n  totaltraslado : number;\r\n  totalimpuestostrasladados : number;\r\n\r\n  totalretenciones : number;\r\n  totalbaseimpuesto : number;\r\n  subtotal : number;\r\n  total : number;\r\n  xml : string;\r\n  pdf : string;  \r\n\r\n  saleid : number;\r\n  \r\n  constructor(\r\n    private cfdiService: CfdiService,\r\n    private graphqlSalesService: GraphqlSalesService,\r\n    private graphqlCatalogosService: GraphqlCatalogosService,\r\n    private graphqlClientsService: GraphqlClientsService,\r\n        private storageService: StorageService,\r\n    private route: ActivatedRoute, \r\n    )\r\n    {\r\n      this.route.params.subscribe( \r\n        res => {\r\n\r\n        console.log(res.id)\r\n        this.saleid = res.id\r\n        }\r\n      ); \r\n    \r\n    }\r\n\r\n    \r\n  ngOnInit(): void {\r\n    this.token = this.storageService.getSession(\"token\");\r\n    this.buscarSale(this.saleid);\r\n    this.getUsocfdi(\"\");\r\n    this.getFormapago(\"\");\r\n    this.getMetodopago(\"\");\r\n  }\r\n\r\n  setReceptor(idreceptor) {\r\n    var myreceptor = this.receptor.find(e => e.id === idreceptor); // { name: 'apples', quantity: 2 }    \r\n    this.rfc = myreceptor.rfc;\r\n    this.nombre = myreceptor.nombre;\r\n    this.direccion = myreceptor.direccion;\r\n\r\n    this.email = myreceptor.email;\r\n    this.usocfdireceptor = myreceptor.usocfdi;\r\n\r\n  }\r\n\r\n  searchReceptor() {\r\n    console.log(this.token);\r\n    this.graphqlClientsService.receptor(this.token, this.rfc)\r\n    .subscribe(({ data, loading }) => {\r\n      this.loading = loading;\r\n      this.receptor = JSON.parse(JSON.stringify(data)).receptor;\r\n      //this.conceptos = JSON.parse(JSON.stringify(data)).detail;\r\n      console.log('receptor : ');\r\n      console.log(JSON.stringify(this.receptor));\r\n\r\n      //this.fillCfdi33();\r\n    });\r\n  }\r\n\r\n\r\n  searchCodigoPostal() {\r\n    console.log(this.token);\r\n    this.graphqlCatalogosService.colonias(this.token, this.codigopostal)\r\n    .subscribe(({ data, loading }) => {\r\n      this.loading = loading;\r\n      this.colonias = JSON.parse(JSON.stringify(data)).colonias;\r\n      //this.conceptos = JSON.parse(JSON.stringify(data)).detail;\r\n      console.log('colonias : ');\r\n      console.log(JSON.stringify(this.colonias));\r\n\r\n      //this.fillCfdi33();\r\n    });\r\n  }\r\n\r\n  getUsocfdi(search : string) {\r\n    \r\n    console.log(this.token);\r\n    //alert(valor);\r\n\r\n    this.graphqlCatalogosService.usocfdi(this.token, search)\r\n    .subscribe(({ data, loading }) => {\r\n      this.loading = loading;\r\n      this.usocfdi = JSON.parse(JSON.stringify(data)).usocfdi;\r\n      \r\n      console.log(JSON.stringify(this.usocfdi));\r\n    });\r\n  }\r\n\r\n\r\n  getMetodopago(search : string) {\r\n    \r\n    console.log(this.token);\r\n    //alert(valor);\r\n\r\n    this.graphqlCatalogosService.metodopago(this.token, search)\r\n    .subscribe(({ data, loading }) => {\r\n      this.loading = loading;\r\n      this.metodopago = JSON.parse(JSON.stringify(data)).metodopago;\r\n      \r\n      console.log(JSON.stringify(this.metodopago));\r\n    });\r\n  }\r\n\r\n\r\n  getFormapago(search : string) {\r\n    \r\n    console.log(this.token);\r\n    //alert(valor);\r\n\r\n    this.graphqlCatalogosService.formapago(this.token, search)\r\n    .subscribe(({ data, loading }) => {\r\n      this.loading = loading;\r\n      this.formapago = JSON.parse(JSON.stringify(data)).formapago;\r\n      \r\n      console.log(JSON.stringify(this.formapago));\r\n    });\r\n  }\r\n\r\n  buscarSale(valor : number) {\r\n    //this.posts = [];\r\n    console.log(this.token);\r\n    console.log(valor);\r\n    //alert(valor);\r\n\r\n    this.graphqlSalesService.sale(this.token, valor)\r\n    .subscribe(({ data, loading }) => {\r\n      this.loading = loading;\r\n      this.sale = JSON.parse(JSON.stringify(data)).sale;\r\n      //this.conceptos = JSON.parse(JSON.stringify(data)).detail;\r\n      this.conceptos = this.sale.details;\r\n\r\n      console.log(JSON.stringify(this.sale));\r\n      console.log(\"productos :\");\r\n      console.log(this.conceptos);\r\n      this.emisorme();\r\n    });\r\n  \r\n  \r\n  }\r\n\r\n  emisorme() {\r\n    console.log(this.token);\r\n    \r\n    this.graphqlSalesService.emisorme(this.token)\r\n    .subscribe(({ data, loading }) => {\r\n      this.loading = loading;\r\n      this.emisor = JSON.parse(JSON.stringify(data)).emisorme;\r\n      //this.conceptos = JSON.parse(JSON.stringify(data)).detail;\r\n      console.log('emisorme : ');\r\n      console.log(JSON.stringify(this.emisor));\r\n\r\n      //this.fillCfdi33();\r\n    });\r\n  }\r\n\r\n  roundTo = function(num: number, places: number) {\r\n    const factor = 10 ** places;\r\n    return Math.round(num * factor) / factor;\r\n  };\r\n/*\r\n  fillCfdi33()\r\n  {\r\n    \r\n    this.cfdi33.serie = this.sale.sale.serie;\r\n    this.cfdi33.folio = this.sale.sale.folio;\r\n    this.cfdi33.formapago = this.sale.sale.formapago; \r\n    this.cfdi33.condicionesdepago = this.sale.sale.condicionesdepago; \r\n    this.cfdi33.subtotal = this.sale.sale.subtotal; \r\n    this.cfdi33.descuento = this.sale.sale.descuento; \r\n    this.cfdi33.moneda = this.sale.sale.moneda; \r\n    this.cfdi33.tipodecomprobante = this.sale.sale.tipodecomprobante;\r\n    this.cfdi33.metodopago = this.sale.sale.metodopago;\r\n    this.cfdi33.lugarexpedicion = this.sale.sale.lugarexpedicion;\r\n\r\n    // emisor\r\n    this.emisor33.rfc = this.emisor.rfc;\r\n    this.emisor33.nombre = this.emisor.nombre;\r\n    this.emisor33.regimenfiscal = \"601\"; //this.emisor.regimenfiscal;\r\n    this.cfdi33.emisor = this.emisor33;\r\n\r\n    // receptor\r\n    this.receptor33.rfc = this.sale.sale.receptor.rfc;\r\n    this.receptor33.nombre = this.sale.sale.receptor.nombre;\r\n    this.receptor33.usocfdi = this.sale.sale.receptor.usocfdi;\r\n    this.cfdi33.receptor = this.receptor33;\r\n\r\n    // conceptos\r\n    this.conceptos33 = [];\r\n\r\n    this.totaltraslado = 0;\r\n    this.totalbaseimpuesto = 0;\r\n    this.subtotal = 0;\r\n    this.total = 0;\r\n\r\n    this.sale.detail.forEach(item => \r\n    {\r\n      this.concepto33 = new Concepto33;\r\n      this.concepto33.claveprodserv = \"01010101\"; // item.codigosat;\r\n      \r\n      this.concepto33.noidentificacion = \"1010\"; //item.product.noidentificacion;\r\n      this.concepto33.cantidad = item.cantidad;\r\n      this.concepto33.claveunidad = \"H87\"; //item.claveunidad;\r\n      this.concepto33.unidad = \"PZA\";\r\n      this.concepto33.descripcion = item.product.description;\r\n\r\n      var precio = item.precio / (1 + 0.160000);\r\n      \r\n      this.concepto33.valorunitario = \"\" + this.roundTo(precio, 4);\r\n\r\n      //var otroimporte = precio * item.cantidad;\r\n\r\n      var importe = precio * item.cantidad;\r\n\r\n      this.concepto33.importe = \"\" + this.roundTo(importe, 4);\r\n      this.concepto33.descuento = item.descuento;\r\n      \r\n\r\n      \r\n      \r\n      // traslados del concepto\r\n      var subtotalconcepto = importe;  // (1 + 0.160000)\r\n\r\n\r\n      var impuestotraslado = subtotalconcepto * 0.160000;\r\n      //impuestotraslado= Math.round( impuestotraslado * 10^6 ) / 10^6;\r\n\r\n      subtotalconcepto= this.roundTo(subtotalconcepto, 4);\r\n      impuestotraslado= this.roundTo(impuestotraslado, 4);\r\n\r\n      console.log(\"otro precio \" + precio)\r\n\r\n     // console.log(\"otro importe \" + otroimporte)\r\n\r\n      console.log(\"importe \" + importe)\r\n      console.log(\"base \" + subtotalconcepto)\r\n      console.log(\"impuesto \" + impuestotraslado)\r\n\r\n      this.conceptoimpuestos33 = new ConceptoImpuestos33;\r\n\r\n      this.traslados = [];\r\n      this.traslado33 = new Traslado33;\r\n\r\n      this.traslado33.base = \"\" + subtotalconcepto;\r\n      this.traslado33.importe = \"\" + impuestotraslado;\r\n      this.traslado33.impuesto = \"002\";\r\n      this.traslado33.tasaocuota = \"0.160000\";\r\n      this.traslado33.tipofactor = \"Tasa\";\r\n\r\n \r\n      this.totalbaseimpuesto += subtotalconcepto;\r\n      this.totaltraslado += impuestotraslado;\r\n \r\n      console.log(this.traslado33);\r\n\r\n      this.traslados.push(this.traslado33);\r\n\r\n      this.conceptoimpuestos33.traslados = this.traslados;\r\n      this.conceptoimpuestos33.retenciones = this.retenciones;\r\n      \r\n      this.concepto33.impuestos = this.conceptoimpuestos33;\r\n      \r\n      this.conceptos33.push(this.concepto33);\r\n      console.log(this.conceptos33);\r\n\r\n    })\r\n\r\n\r\n    this.cfdi33.conceptos = this.conceptos33;\r\n    \r\n    this.totaltraslado = this.roundTo(this.totaltraslado, 2)\r\n    this.totalbaseimpuesto = this.roundTo(this.totalbaseimpuesto,4)\r\n    this.subtotal = this.totalbaseimpuesto;\r\n\r\n    this.cfdiimpuestos33 = new CfdiImpuestos33;\r\n    this.cfdiimpuestos33.totalimpuestostrasladados = \"\" + this.totaltraslado;\r\n    // traslados del cfdi\r\n    this.traslados = [];\r\n    this.traslado33 = new Traslado33;\r\n    this.traslado33.base = \"\" + this.totalbaseimpuesto;\r\n    this.traslado33.importe = \"\" + this.totaltraslado;\r\n    this.traslado33.impuesto = \"002\";\r\n    this.traslado33.tasaocuota = \"0.160000\";\r\n    this.traslado33.tipofactor = \"Tasa\";\r\n    this.traslados.push(this.traslado33);\r\n\r\n    this.cfdiimpuestos33.traslados = this.traslados;\r\n\r\n    this.cfdi33.impuestos = this.cfdiimpuestos33;\r\n\r\n    this.total = this.subtotal + this.totaltraslado;\r\n\r\n    this.total = this.roundTo(this.total, 2)\r\n    this.subtotal = this.roundTo(this.subtotal, 2)\r\n  \r\n    this.cfdi33.total = \"\" + (this.total);\r\n    this.cfdi33.subtotal = \"\" + this.subtotal;\r\n\r\n    console.log(JSON.stringify(this.cfdi33));\r\n\r\n  }\r\n*/\r\n  fillCfdi40()\r\n  {\r\n    \r\n    this.cfdi40.serie = this.sale.serie;\r\n    this.cfdi40.folio = this.sale.folio;\r\n    this.cfdi40.formapago = this.myformapago; //this.sale.formapago; \r\n    this.cfdi40.condicionesdepago = this.mycondicionespago; //this.sale.condicionesdepago; \r\n    this.cfdi40.subtotal = this.sale.subtotal; \r\n    this.cfdi40.descuento = this.sale.descuento; \r\n    this.cfdi40.moneda = this.sale.moneda; \r\n    this.cfdi40.tipodecomprobante = this.sale.tipodecomprobante;\r\n    this.cfdi40.metodopago = this.mymetodopago; //this.sale.metodopago;\r\n    this.cfdi40.lugarexpedicion = this.sale.lugarexpedicion;\r\n    this.cfdi40.exportacion = \"01\";\r\n    // emisor\r\n    this.emisor40.rfc = this.emisor.rfc;\r\n    this.emisor40.nombre = this.emisor.nombre;\r\n    this.emisor40.regimenfiscal = \"601\"; //this.emisor.regimenfiscal;\r\n    this.cfdi40.emisor = this.emisor40;\r\n\r\n    // receptor\r\n    this.receptor40.rfc = this.rfc; //this.sale.receptor.rfc;\r\n    this.receptor40.nombre = this.nombre; //this.sale.receptor.nombre;\r\n    this.receptor40.usocfdi = this.myusocfdi; //this.sale.receptor.usocfdi;\r\n    this.receptor40.domiciliofiscalreceptor = this.codigopostal;\r\n    this.receptor40.regimenfiscalreceptor = \"616\";\r\n\r\n    this.cfdi40.receptor = this.receptor40;\r\n\r\n    // conceptos\r\n    this.conceptos40 = [];\r\n\r\n    this.totaltraslado = 0;\r\n    this.totalbaseimpuesto = 0;\r\n    this.subtotal = 0;\r\n    this.total = 0;\r\n\r\n    this.sale.details.forEach(item => \r\n    {\r\n      this.concepto40 = new Concepto40;\r\n      this.concepto40.claveprodserv = item.product.codigosat.claveprodserv;//\"01010101\"; // item.codigosat;\r\n      this.concepto40.objetoimp = \"02\";\r\n      this.concepto40.noidentificacion = item.product.noidentificacion;\r\n      this.concepto40.cantidad = item.cantidad;\r\n      this.concepto40.claveunidad = item.product.claveunidad.claveunidad;\r\n      this.concepto40.unidad = item.product.claveunidad.nombre;\r\n\r\n      if (this.concepto40.unidad.length > 20)\r\n        this.concepto40.unidad = this.concepto40.unidad.substring(0, 10);\r\n     \r\n      this.concepto40.descripcion = item.product.description;\r\n\r\n      // Calculo traslado iva\r\n      var porctrasladoiva = item.product.trasladoiva;\r\n      var precio = item.precio / (1 + porctrasladoiva);\r\n      // Calculo traslado iva\r\n      \r\n      this.concepto40.valorunitario = \"\" + this.roundTo(precio, 4);\r\n      var importe = precio * item.cantidad;\r\n\r\n      this.concepto40.importe = \"\" + this.roundTo(importe, 4);\r\n      this.concepto40.descuento = item.descuento;\r\n      \r\n\r\n      \r\n      \r\n      // traslados del concepto\r\n      var subtotalconcepto = importe;  // (1 + 0.160000)\r\n\r\n\r\n      var impuestotraslado = subtotalconcepto * 0.160000;\r\n      //impuestotraslado= Math.round( impuestotraslado * 10^6 ) / 10^6;\r\n\r\n      subtotalconcepto= this.roundTo(subtotalconcepto, 4);\r\n      impuestotraslado= this.roundTo(impuestotraslado, 4);\r\n\r\n      console.log(\"otro precio \" + precio)\r\n\r\n     // console.log(\"otro importe \" + otroimporte)\r\n\r\n      console.log(\"importe \" + importe)\r\n      console.log(\"base \" + subtotalconcepto)\r\n      console.log(\"impuesto \" + impuestotraslado)\r\n\r\n      this.conceptoimpuestos40 = new ConceptoImpuestos40;\r\n\r\n      this.traslados = [];\r\n      this.traslado40 = new Traslado40;\r\n\r\n      this.traslado40.base = \"\" + subtotalconcepto;\r\n      this.traslado40.importe = \"\" + impuestotraslado;\r\n      this.traslado40.impuesto = \"002\";\r\n      this.traslado40.tasaocuota = \"0.160000\";\r\n      this.traslado40.tipofactor = \"Tasa\";\r\n\r\n \r\n      this.totalbaseimpuesto += subtotalconcepto;\r\n      this.totaltraslado += impuestotraslado;\r\n \r\n      console.log(this.traslado40);\r\n\r\n      this.traslados.push(this.traslado40);\r\n\r\n      this.conceptoimpuestos40.traslados = this.traslados;\r\n      this.conceptoimpuestos40.retenciones = this.retenciones;\r\n      \r\n      this.concepto40.impuestos = this.conceptoimpuestos40;\r\n      \r\n      this.conceptos40.push(this.concepto40);\r\n      console.log(this.conceptos40);\r\n\r\n    })\r\n\r\n\r\n    this.cfdi40.conceptos = this.conceptos40;\r\n    \r\n    this.totalimpuestostrasladados = this.roundTo(this.totaltraslado, 2)\r\n    this.totaltraslado = this.roundTo(this.totaltraslado, 4)\r\n\r\n    this.totalbaseimpuesto = this.roundTo(this.totalbaseimpuesto,2)\r\n    this.subtotal = this.totalbaseimpuesto;\r\n\r\n    this.cfdiimpuestos40 = new CfdiImpuestos40;\r\n    this.cfdiimpuestos40.totalimpuestostrasladados = \"\" + this.totalimpuestostrasladados;\r\n    // traslados del cfdi\r\n    this.traslados = [];\r\n    this.traslado40 = new Traslado40;\r\n    this.traslado40.base = \"\" + this.totalbaseimpuesto;\r\n    this.traslado40.importe = \"\" + this.totaltraslado;\r\n    this.traslado40.impuesto = \"002\";\r\n    this.traslado40.tasaocuota = \"0.160000\";\r\n    this.traslado40.tipofactor = \"Tasa\";\r\n    this.traslados.push(this.traslado40);\r\n\r\n    this.cfdiimpuestos40.traslados = this.traslados;\r\n\r\n    this.cfdi40.impuestos = this.cfdiimpuestos40;\r\n\r\n    this.total = this.subtotal + this.totaltraslado;\r\n\r\n    this.total = this.roundTo(this.total, 2)\r\n    this.subtotal = this.roundTo(this.subtotal, 2)\r\n  \r\n    this.cfdi40.total = \"\" + (this.total);\r\n    this.cfdi40.subtotal = \"\" + this.subtotal;\r\n\r\n    console.log(JSON.stringify(this.cfdi40));\r\n\r\n  }\r\n  \r\n  getCfdi() {\r\n    /*\r\n    var products = [];\r\n    var mytoken = this.storageService.getSession(\"token\");\r\n    this.myCar.forEach(element => {\r\n      products.push({\r\n        product : element.id,\r\n        cantidad : 1,\r\n        precio: element.price\r\n      })\r\n    });\r\n    alert(JSON.stringify(products));\r\n    */\r\n/*\r\n    var mycfdi =\r\n    {\r\n      \"serie\": \"AAA\",\r\n      \"folio\": 1000,\r\n      \"formapago\":\"03\", \r\n      \"condicionesdepago\":\"CONTADO\", \r\n      \"subtotal\":\"1850\", \r\n      \"descuento\":\"175.00\", \r\n      \"moneda\":\"MXN\", \r\n      \"total\":\"1943.00\", \r\n      \"tipodecomprobante\":\"I\", \r\n      \"metodopago\":\"PUE\", \r\n      \"lugarexpedicion\":\"68050\",\r\n      \"emisor\": { \r\n                  \"rfc\" : \"CETA7610219C9\",\r\n                  \"nombre\": \"ADOLFO CENTENO TELLEZ\",\r\n                  \"regimenfiscal\":\"601\"\r\n  \r\n                },\r\n      \"receptor\": {\r\n                    \"rfc\": \"KUB1004199C9\",\r\n                    \"nombre\": \"KUBEET SRL DE CV\",\r\n                    \"usocfdi\":\"G01\"\r\n                 },\r\n      \"conceptos\": [\r\n                  {\r\n                     \"claveprodserv\" : \"01010101\",\r\n                     \"noidentificacion\": \"AULOG001\",\r\n                     \"cantidad\": \"5\",\r\n                     \"claveunidad\": \"H87\",\r\n                     \"unidad\": \"Pieza\",\r\n                     \"descripcion\": \"Aurriculares USB Logitech\",\r\n                     \"valorunitario\": \"350.00\",\r\n                     \"importe\": \"1750.00\",\r\n                     \"descuento\": \"175.00\",\r\n                     \"impuestos\": {\r\n                        \"traslados\" : [\r\n                            {\r\n                                \"base\": \"1575.00\",\r\n                                \"impuesto\": \"002\",\r\n                                \"tipofactor\": \"Tasa\",\r\n                                \"tasaocuota\": \"0.160000\",\r\n                                \"importe\": \"252.00\"\r\n                            }\r\n                        ],\r\n                        \"retenciones\":[]\r\n  \r\n                     }\r\n                  },\r\n                  {\r\n                     \"claveprodserv\" : \"01010101\",\r\n                     \"noidentificacion\": \"USB\",\r\n                     \"cantidad\": \"1\",\r\n                     \"claveunidad\": \"H87\",\r\n                     \"unidad\": \"Pieza\",\r\n                     \"descripcion\": \"Memoria USB 32gb marca Kingston\",\r\n                     \"valorunitario\": \"100.00\",\r\n                     \"importe\": \"100.00\",\r\n                     \"descuento\": \"0.00\",\r\n                      \"impuestos\": {\r\n                        \"traslados\" : [\r\n                            {\r\n                                \"base\": \"100.00\",\r\n                                \"impuesto\": \"002\",\r\n                                \"tipofactor\": \"Tasa\",\r\n                                \"tasaocuota\": \"0.160000\",\r\n                                \"importe\": \"16.00\"\r\n                            }\r\n                        ],\r\n                        \"retenciones\":[]\r\n  \r\n  \r\n                     }\r\n                  }\r\n      ],\r\n      \"impuestos\": {\r\n          \"totalimpuestostrasladados\": \"268.00\",\r\n          \"traslados\" : [\r\n              {\r\n              \"impuesto\":\"002\",\r\n              \"tipofactor\":\"Tasa\",\r\n              \"tasaocuota\":\"0.160000\",\r\n              \"importe\":\"268.00\"\r\n              }\r\n          ]\r\n      }\r\n      \r\n  }\r\n  */\r\n    this.fillCfdi40();\r\n\r\n    console.log(JSON.stringify(this.cfdi40));\r\n    this.cfdiService.getCfdi(JSON.stringify(this.cfdi40))\r\n    .subscribe(( data ) => {\r\n       console.log('Cfdi ok :  ', data);\r\n\r\n       console.log('Cfdi ok :  ', data.xml);\r\n       console.log('Cfdi ok :  ', data.pdf);\r\n\r\n       this.xml = data.xml;\r\n       this.pdf = data.pdf;\r\n\r\n       if (this.xml && this.pdf) {\r\n         console.log(\"ok\")\r\n\r\n         this.graphqlSalesService.updateSale(this.token, this.saleid, \"A\", this.xml, this.pdf)\r\n         .subscribe(({ data }) => {\r\n\r\n           console.log(JSON.stringify(JSON.parse(JSON.stringify(data)).updateSale));\r\n           \r\n         });\r\n       \r\n\r\n       }\r\n       else {\r\n        console.log(\"error \")\r\n       }\r\n       //console.log('Cfdi json :  ', JSON.stringify(data));\r\n       //this.router.navigate(['/']);\r\n       //alert(JSON.stringify(data));\r\n       \r\n    }, (error) => {\r\n       console.log('there was an error in cfdi : ', error);\r\n    });\r\n\r\n   \r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsaWVudGVzL2NsaWVudGVzLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\r\\n\\r\\n<div class=\\\"main-content\\\">\\r\\n\\r\\n   \\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <ng-container *ngIf=\\\"cartState$ | async as state\\\">\\r\\n     <!--\\r\\n      <form class=\\\"navbar-form\\\"> \\r\\n        <ng-container *ngIf=\\\"user\\\">\\r\\n\\r\\n        Bienvenido: <b>{{user}}</b> \\r\\n\\r\\n        Cerrar Sesion\\r\\n\\r\\n        <button mat-raised-button (click)=\\\"logout()\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n           <i class=\\\"material-icons\\\">login</i>\\r\\n           <div class=\\\"ripple-container\\\"></div>\\r\\n        </button>\\r\\n\\r\\n\\r\\n        </ng-container>\\r\\n        \\r\\n        \\r\\n      </form> \\r\\n    -->\\r\\n      <ng-container *ngIf=\\\"user\\\">\\r\\n\\r\\n        <app-cart [state]=\\\"state\\\"></app-cart> \\r\\n      </ng-container>\\r\\n<!--\\r\\n      <ng-container *ngIf=\\\"!user\\\"> \\r\\n        Login para Comprar\\r\\n        <button mat-raised-button (click)=\\\"checkout()\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n           <i class=\\\"material-icons\\\">login</i>\\r\\n           <div class=\\\"ripple-container\\\"></div>\\r\\n        </button>\\r\\n\\r\\n        o crear Nuevo usuario\\r\\n        <button mat-raised-button (click)=\\\"newuser()\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n           <i class=\\\"material-icons\\\">login</i>\\r\\n           <div class=\\\"ripple-container\\\"></div>\\r\\n        </button>\\r\\n      </ng-container>\\r\\n    -->\\r\\n    <mat-card>\\r\\n      <mat-card-header>\\r\\n          <mat-card-title>Total: {{ state.tot.subTot | currency:'USD':'symbol':'1.2-2' }}</mat-card-title>\\r\\n\\r\\n          <mat-card-subtitle>\\r\\n              tax: {{ state.tot.tax | currency:'USD':'symbol':'1.2-2' }}\\r\\n              <br />\\r\\n        at checkout: {{ state.tot.grandTot | currency:'USD':'symbol':'1.2-2' }}\\r\\n      </mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n    <mat-card-actions>\\r\\n      <mat-chip-list>\\r\\n        <mat-chip *ngFor=\\\"let item of state.cart\\\" [removable]=\\\"true\\\" (removed)=\\\"remove(item)\\\">{{ item.name }}\\r\\n          <mat-icon matChipRemove>cancel</mat-icon>\\r\\n        </mat-chip>\\r\\n      </mat-chip-list>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n    <hr />\\r\\n<!--\\r\\n    <mat-card *ngFor=\\\"let item of state.store\\\">\\r\\n          <mat-card-header>\\r\\n              {{ item.name }}\\r\\n          </mat-card-header>\\t\\t\\r\\n      <mat-card-subtitle>\\r\\n        \\r\\n        <ul>\\r\\n          <li>{{ item.details }}</li>\\r\\n          <li>{{ item.price | currency:'USD':'symbol':'1.2-2' }}</li>\\r\\n        </ul>\\r\\n      </mat-card-subtitle>\\r\\n      <mat-card-actions>\\r\\n  \\r\\n          <button mat-flat-button color=\\\"primary\\\" role=\\\"button\\\" (click)=\\\"addItemToCart(item)\\\">\\r\\n        <mat-icon>add_shopping_cart</mat-icon>\\r\\n        Add to cart\\r\\n      </button>\\r\\n      </mat-card-actions>\\r\\n    </mat-card>\\r\\n  -->\\r\\n  </ng-container>\\r\\n  \\r\\n  <div class=\\\"input-group no-border\\\">\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"valor\\\" name=\\\"valor\\\" class=\\\"form-control\\\" placeholder=\\\"Buscar Producto o Codigo de Barras...\\\">\\r\\n    <button mat-raised-button (click)=\\\"search()\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n        <i class=\\\"material-icons\\\">search</i>\\r\\n        <div class=\\\"ripple-container\\\"></div>\\r\\n    </button>\\r\\n    \\r\\n  </div>\\r\\n  <br>\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <mat-form-field appearance=\\\"fill\\\">\\r\\n      <mat-label>Seleccione tipo cliente</mat-label>\\r\\n      <mat-select [(ngModel)]=\\\"selectedList\\\" name=\\\"food\\\" #client (selectionChange)=\\\"changeClient($event.value)\\\">\\r\\n        <mat-option *ngFor=\\\"let list of ListProducts\\\" [value]=\\\"list?.id\\\">\\r\\n          {{list?.descripcion}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\"> \\r\\n              \\r\\n    <div class=\\\"col-md-2\\\" *ngFor=\\\"let product of posts\\\">\\r\\n    <div class=\\\"card card-chart\\\" style=\\\"width: 160px; height: 330px;\\\">\\r\\n        <!--     \\r\\n           <div class=\\\"card-header card-header-success\\\">\\r\\n              <img  width=\\\"50\\\" height=\\\"50\\\" src={{product.url}}>\\r\\n          Vendedor: {{product.postedBy.username}}\\r\\n\\r\\n        </div>\\r\\n         -->\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n          <p class=\\\"card-category\\\">\\r\\n\\r\\n              <span class=\\\"text-success\\\" *ngIf=\\\"priceList !== true\\\">\\r\\n                  <img  width=\\\"120\\\" height=\\\"120\\\" src={{product.url}}>\\r\\n              </span> \\r\\n              <span class=\\\"text-success\\\" *ngIf=\\\"priceList === true\\\">\\r\\n                <img  width=\\\"120\\\" height=\\\"120\\\" src={{product.producto?.url}}>\\r\\n            </span> \\r\\n          </p>    \\r\\n              <h4 *ngIf=\\\"priceList !== true\\\" class=\\\"card-title\\\">{{product.id}} - {{product.description}}</h4>\\r\\n              <h4 *ngIf=\\\"priceList === true\\\" class=\\\"card-title\\\"> {{product.producto?.description}}</h4>\\r\\n\\r\\n            <p class=\\\"card-category\\\">\\r\\n                <span class=\\\"text-success\\\"><i class=\\\"fa fa-long-arrow-up\\\"></i>  \\r\\n                </span> Precio: ${{product.precio}} \\r\\n            </p>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          \\r\\n          <div class=\\\"stats\\\">\\r\\n\\r\\n              <button mat-flat-button color=\\\"primary\\\" role=\\\"button\\\" (click)=\\\"addItemToCart(product)\\\">\\r\\n                  <mat-icon>add_shopping_cart</mat-icon>\\r\\n                  Add to cart\\r\\n                </button>\\r\\n              <!--\\r\\n              <i class=\\\"material-icons text-danger\\\">warning</i>\\r\\n              <a href=\\\"javascript:void(0)\\\"> Comprar </a>\\r\\n          -->\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    </div>\\r\\n  \\r\\n</div> \\r\\n   \\r\\n   \\r\\n    \\r\\n</div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { FileUpload } from '../models/file-upload';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileUploadService {\r\nprivate basePath = '/uploads';\r\ndownloadURL : string ;\r\n\r\n\r\n  constructor(private db: AngularFireDatabase, private storage: AngularFireStorage) { }\r\n\r\n  pushFileToStorage(fileUpload: FileUpload): Observable<number> {\r\n    const filePath = `${this.basePath}/${fileUpload.file.name}`;\r\n    const storageRef = this.storage.ref(filePath);\r\n    const uploadTask = this.storage.upload(filePath, fileUpload.file);\r\n\r\n    uploadTask.snapshotChanges().pipe(\r\n      finalize(() => {\r\n        storageRef.getDownloadURL().subscribe(downloadURL => {\r\n          fileUpload.url = downloadURL;\r\n          \r\n          fileUpload.name = fileUpload.file.name;\r\n          this.saveFileData(fileUpload);\r\n         this.downloadURL = fileUpload.url;\r\n        });\r\n      })\r\n    ).subscribe();\r\n\r\n    return uploadTask.percentageChanges();\r\n  }\r\n\r\n  private saveFileData(fileUpload: FileUpload): void {\r\n    this.db.list(this.basePath).push(fileUpload);\r\n  }\r\n\r\n  getFiles(numberItems): AngularFireList<FileUpload> {\r\n    return this.db.list(this.basePath, ref =>\r\n      ref.limitToLast(numberItems));\r\n  }\r\n\r\n  deleteFile(fileUpload: FileUpload): void {\r\n    this.deleteFileDatabase(fileUpload.key)\r\n      .then(() => {\r\n        this.deleteFileStorage(fileUpload.name);\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  private deleteFileDatabase(key: string): Promise<void> {\r\n    return this.db.list(this.basePath).remove(key);\r\n  }\r\n\r\n  private deleteFileStorage(name: string): void {\r\n    const storageRef = this.storage.ref(this.basePath);\r\n    storageRef.child(name).delete();\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXByYXMvY29tcHJhcy5jb21wb25lbnQuY3NzIn0= */\";","import { Emisor40 } from \"./emisor40\";\r\nimport { Receptor40 } from \"./receptor40\";\r\nimport { Concepto40 } from \"./concepto40\";\r\nimport { CfdiImpuestos40 } from \"./cfdiimpuestos40\";\r\n\r\nexport class Cfdi40 {\r\n    serie : string;\r\n    folio : string;\r\n    formapago: string; \r\n    condicionesdepago : string; \r\n    subtotal : string; \r\n    descuento : string; \r\n    moneda : string; \r\n    total : string; \r\n    tipodecomprobante : string;\r\n    exportacion : string;\r\n    metodopago : string;\r\n    lugarexpedicion : string;\r\n    emisor: Emisor40;\r\n    receptor: Receptor40;\r\n    conceptos: Concepto40[];\r\n    impuestos: CfdiImpuestos40\r\n}","export class Emisor33 {\r\n    rfc : string;\r\n    nombre : string;\r\n    regimenfiscal : string;\r\n}","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdminLayoutRoutes } from './admin-layout.routing';\nimport { DashboardComponent } from '../../dashboard/dashboard.component';\n//import { UserProfileComponent } from '../../user-profile/user-profile.component';\nimport { TableListComponent } from '../../table-list/table-list.component';\nimport { TypographyComponent } from '../../typography/typography.component';\nimport { IconsComponent } from '../../icons/icons.component';\nimport { MapsComponent } from '../../maps/maps.component';\n//import { NotificationsComponent } from '../../notifications/notifications.component';\nimport { UpgradeComponent } from '../../upgrade/upgrade.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRippleModule} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSelectModule} from '@angular/material/select';\n//import {NewUserComponent } from '../../new-user/new-user.component';\n//import {LoginComponent } from '../../login/login.component';\nimport { StorageService } from \"../../../services/storage.service\";\nimport {ProductsComponent } from '../../products/products.component';\nimport {NewProductComponent } from '../../new-product/new-product.component';\n\n//import { CarritocomprasComponent } from '../../carritocompras/carritocompras.component';\nimport { ShoppingCartService } from '../../../services/shopping-cart.service';\n\n//import { CartComponent } from '../../cart/cart.component';\n//import { CheckoutDialog } from '../../checkout/checkout.component';\nimport { MaterialModule } from '../../material/material.module';\nimport { FacturacionComponent } from '../../facturacion/facturacion.component';\nimport { ClientesComponent } from '../../clientes/clientes.component';\nimport { ConfiguracionComponent } from '../../configuracion/configuracion.component';\nimport {NewClientComponent } from '../../new-client/new-client.component';\nimport { LoginService } from \"../../../services/login.service\";\nimport { CartComponent } from '../../cart/cart.component';\nimport { LogoutComponent } from '../../logout/logout.component';\nimport { CfdiComponent } from '../../cfdi/cfdi.component';\nimport { MarcasComponent } from '../../marcas/marcas.component';\nimport { LineasComponent } from '../../lineas/lineas.component';\nimport { ListasComponent } from '../../listas/listas.component';\nimport { ProveedoresComponent } from '../../proveedores/proveedores.component';\nimport { ComprasComponent } from '../../compras/compras.component';\nimport { ListascompraComponent } from '../../listascompra/listascompra.component';\nimport { NewMarcaComponent } from '../../new-marca/new-marca.component';\nimport { NewLineaComponent } from '../../new-linea/new-linea.component'\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AdminLayoutRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatRippleModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MaterialModule\n  ],\n  declarations: [\n    DashboardComponent,\n   // UserProfileComponent,\n   // NewUserComponent,\n    NewProductComponent,\n    //LoginComponent,\n    ProductsComponent,\n    TableListComponent,\n    TypographyComponent,\n    IconsComponent,\n    MapsComponent,\n    //NotificationsComponent,\n    UpgradeComponent,\n    //CarritocomprasComponent,\n    CartComponent,\n    //CheckoutDialog,\n    FacturacionComponent,\n    ClientesComponent,\n    ConfiguracionComponent,\n    NewClientComponent,\n    LogoutComponent,\n    CfdiComponent,\n    MarcasComponent,\n    LineasComponent,\n    ListasComponent,\n    ListascompraComponent,\n    ProveedoresComponent,\n    ComprasComponent,\n    NewMarcaComponent,\n    NewLineaComponent,\n    NewMarcaComponent\n    \n  ], \n  \n  providers: [StorageService, ShoppingCartService, LoginService]\n\n\n})\n\nexport class AdminLayoutModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy1tYXJjYS9uZXctbWFyY2EuY29tcG9uZW50LmNzcyJ9 */\";","import { Injectable } from \"@angular/core\";\nimport { Apollo, gql } from \"apollo-angular\";\nimport { HttpHeaders } from \"@angular/common/http\";\n\n\nconst LINEAS = gql`\n  query lineas($search: String!) {\n    lineas(search: $search) {\n      id\n      description\n      postedBy {\n        username\n      }\n    }\n  }\n`;\n\nconst CREATELINEA = gql`\nmutation createLinea($description: String!, $idlinea: Int!) {\n  createLinea(description: $description, idlinea: $idlinea){\n    id\n    description\n  }\n}\n`;\n\nconst DELETELINEA = gql`\nmutation DeleteLinea($idlinea: Int!){\n  deleteLinea(idlinea: $idlinea) {\n    id\n  }\n}`;\n\nconst LINEA = gql`\n  query Linea($idlinea: Int!) {\n    linea(idlinea: $idlinea) {\n      id\n      description\n      postedBy {\n        username\n      }\n    }\n  }\n`;\n\n\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GraphqlLineasService {\n  loading: boolean;\n  posts: any;\n  //private querySubscription: Subscription;\n\n  constructor(private apollo: Apollo) {}\n\n  \n  createLinea(\n    mytoken: string,\n    description: string,\n    idlinea: number,\n    \n  ) {\n    //console.log(\"token auth = \" + mytoken);\n    return this.apollo.mutate({\n      mutation: CREATELINEA,\n      variables: {\n        idlinea: idlinea,\n        description: description,\n        \n      },\n      context: {\n        // example of setting the headers with context per operation\n        headers: new HttpHeaders().set(\"Authorization\", \"JWT \" + mytoken)\n      },\n    });\n  }\n\n  deleteLinea(\n    mytoken: string,\n    idlinea: number,\n  ){\n    //console.log(\"token: \"+mytoken+\" id a rematar: \"+idlinea);\n\n    return this.apollo.mutate({\n      mutation: DELETELINEA,\n      variables: {\n        idlinea: idlinea,\n      },\n      context: {\n        // example of setting the headers with context per operation\n        headers: new HttpHeaders().set(\"Authorization\", \"JWT \" + mytoken),\n      },\n    });\n  }\n\n  lineas(mytoken: string, valor: string) {\n    return this.apollo.query({\n      query: LINEAS,\n      variables: {\n        search: valor,\n      },\n      context: {\n        // example of setting the headers with context per operation\n        headers: new HttpHeaders().set(\"Authorization\", \"JWT \" + mytoken),\n      },\n    });\n  }\n\n  linea(mytoken: string, valor: number) {\n    return this.apollo.query({\n      query: LINEA,\n      variables: {\n        idlinea: valor,\n      },\n      context: {\n        // example of setting the headers with context per operation\n        headers: new HttpHeaders().set(\"Authorization\", \"JWT \" + mytoken),\n      },\n    });\n  }\n\n}\n\n","export default \"<p>\\r\\n\\tCarrito de Compras: <button mat-flat-button style=\\\"background-color: #33a339; color: #ececec;\\\" role=\\\"button\\\" [disabled]=\\\"state.cart.length < 1\\\" (click)=\\\"checkout()\\\">\\r\\n    <mat-icon>shopping_cart</mat-icon>\\r\\n    Pagar {{ state.cart.length }} Artículo{{ state.cart.length > 1 ? 's' : '' }}</button>\\r\\n</p>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbmZpZ3VyYWNpb24vY29uZmlndXJhY2lvbi5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, ApplicationRef } from \"@angular/core\";\r\nimport { MarcaApi } from \"../../models/marcaapi\";\r\nimport { GraphqlMarcasService } from \"../../services/graphql.marcas.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { StorageService } from \"../../services/storage.service\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormArray, AbstractControl } from '@angular/forms';\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-marca',\r\n  templateUrl: './new-marca.component.html',\r\n  styleUrls: ['./new-marca.component.css']\r\n})\r\n\r\nexport class NewMarcaComponent {\r\n  myMarca = new MarcaApi();\r\n  mytoken: any;\r\n  loading: boolean;\r\n  posts: any;\r\n  valor: string;\r\n\r\n  validation: FormGroup;\r\n\r\n  event;\r\n\r\n  mode = 'create | update'\r\n\r\n  constructor(\r\n    private graphqlMarca: GraphqlMarcasService,\r\n    private graphqlMarcasService: GraphqlMarcasService,\r\n    private router: Router,\r\n    private storageService: StorageService,\r\n    private appRef: ApplicationRef,\r\n    private route: ActivatedRoute,\r\n\r\n    private fb: FormBuilder,\r\n  ) \r\n  \r\n  {\r\n    this.route.params.subscribe(   \r\n      res => {\r\n\r\n        if(res.id == 0){\r\n          this.mode = 'create';\r\n        }else if(res.id != 0){\r\n          this.mode = 'update';\r\n        }\r\n\r\n        console.log(res);\r\n        this.myMarca.id = res.id;\r\n        this.valor = res.id;\r\n        \r\n\r\n        if (this.myMarca.id > 0)  // is update option\r\n        {\r\n          this.mytoken = this.storageService.getSession(\"token\");\r\n\r\n          this.getMarcaById(this.myMarca.id);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mytoken = this.storageService.getSession(\"token\");\r\n    this.createForm()\r\n  }\r\n\r\n  createForm(){\r\n    this.validation = this.fb.group({\r\n      description: [\"\", Validators.required]\r\n    })\r\n  }\r\n\r\n  get r() { return this.validation.controls; }\r\n\r\n\r\n  //redireccionamiento\r\n  getMarcaById(id) {\r\n    \r\n    this.graphqlMarcasService.marca(this.mytoken, id)\r\n    .subscribe(({ data, loading }) => {\r\n      \r\n      this.loading = loading;\r\n      this.posts = JSON.parse(JSON.stringify(data)).marca;\r\n      console.log(\"Recuperado: \",JSON.stringify(this.posts))\r\n\r\n      //***Actualiza y llena los campos de id y descripcion con el patch***** */\r\n      this.validation.patchValue({\r\n        id: this.posts.id,\r\n        description: this.posts.description\r\n      })\r\n      \r\n    });\r\n\r\n  }\r\n\r\n  Marca() {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: 'btn btn-success',\r\n        cancelButton: 'btn btn-danger'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n\r\n    if(this.mode == 'create'){\r\n\r\n      if (this.validation.valid) {\r\n\r\n        swalWithBootstrapButtons.fire({\r\n          title: '¿Estas seguro de crear esta Marca?',\r\n          text: \"No podrás deshacer los cambios.\",\r\n          icon: 'warning',\r\n          showCancelButton: true,\r\n          confirmButtonText: 'Si, crear',\r\n          cancelButtonText: 'No, cancelar',\r\n          reverseButtons: true\r\n        }).then((result) => {\r\n\r\n          if(result.isConfirmed){\r\n            /**Implemente code here */\r\n\r\n            let saveValue;\r\n            saveValue = new MarcaApi(this.validation.value);\r\n            saveValue.id = 0\r\n      \r\n            this.graphqlMarca\r\n              .createMarca(\r\n                this.mytoken,\r\n                saveValue.description,\r\n                saveValue.id\r\n              )\r\n              .subscribe(\r\n                ({ data }) => {\r\n    \r\n                  this.router.navigate([\"/admin/admin/marcas\"]);\r\n                  this.appRef.tick();\r\n                  //this.posts = undefined;\r\n                },\r\n                (error) => {\r\n                  console.error(\"there was an error sending the query\", error);\r\n                },\r\n              );\r\n\r\n            swalWithBootstrapButtons.fire(\r\n              'Nueva marca creada!',\r\n              'Marca creada correctamente',\r\n              'success'\r\n            )\r\n          }else if (\r\n            result.dismiss === Swal.DismissReason.cancel\r\n          ){\r\n            swalWithBootstrapButtons.fire(\r\n              'Cancelado',\r\n              'Operración cancelada',\r\n              'error'\r\n            )\r\n          }\r\n\r\n        })\r\n      }else{\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Campo vacio!',\r\n          text: 'Introduzca dato valido!',\r\n        })\r\n      }\r\n  \r\n    }else if(this.mode == 'update'){\r\n      this.posts.description = (this.posts.description);\r\n      this.posts.id = (this.posts.id);\r\n  \r\n\r\n      if (\r\n        this.validation.valid\r\n      ) {\r\n        /**implement here swet alert */\r\n        swalWithBootstrapButtons.fire({\r\n          title: '¿Estas seguro de actualizar esta Marca?',\r\n          text: \"No podrás deshacer los cambios.\",\r\n          icon: 'warning',\r\n          showCancelButton: true,\r\n          confirmButtonText: 'Si, actualizar',\r\n          cancelButtonText: 'No, cancelar',\r\n          reverseButtons: true\r\n        }).then((result) => {\r\n          if(result.isConfirmed){\r\n            let saveValue;\r\n            saveValue = new MarcaApi(this.validation.value);\r\n            saveValue.id = this.posts.id;\r\n      \r\n            this.graphqlMarca\r\n              .createMarca(\r\n                this.mytoken,\r\n                saveValue.description,\r\n                saveValue.id\r\n              )\r\n              .subscribe(\r\n                ({ data }) => {\r\n                  this.router.navigate([\"/admin/admin/marcas\"]);\r\n                  this.appRef.tick();\r\n                },\r\n                (error) => {  \r\n              },\r\n            );\r\n          }else if(\r\n            result.dismiss === Swal.DismissReason.cancel\r\n          ) {\r\n            swalWithBootstrapButtons.fire(\r\n              'Cancelado',\r\n              'Operración cancelada',\r\n              'error'\r\n            )\r\n          }\r\n        })\r\n      } else {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Campo vacio!',\r\n          text: 'Introduzca dato válido!',\r\n        })\r\n      }\r\n  \r\n    }\r\n  }\r\n\r\n  \r\n  clearFieldsMarca() {\r\n    this.event.srcElement.value = null;\r\n    this.myMarca.description = \"\";\r\n  }\r\n\r\n  dataConversion() {\r\n    if (this.posts.description == this.posts.description.toString())\r\n      this.posts.description = this.posts.description.toString();\r\n\r\n  }\r\n\r\n\r\n}\r\n","export class Receptor33 {\r\n    rfc : string;\r\n    nombre : string;\r\n    usocfdi : string;\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3Rhcy9saXN0YXMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { GraphqlListasService } from '../../services/graphql.listas.service';\r\nimport { StorageService } from \"../../services/storage.service\";\r\n\r\n@Component({\r\n  selector: 'app-listas',\r\n  templateUrl: './listas.component.html',\r\n  styleUrls: ['./listas.component.css']\r\n})\r\nexport class ListasComponent implements OnInit {\r\n\r\n    loading: boolean;\r\n    posts: any;\r\n    //private querySubscription: Subscription;\r\n    user: string;\r\n    token: string;\r\n    valor: string;\r\n  \r\n    constructor(private graphqlListasService: GraphqlListasService,\r\n                private storageService : StorageService\r\n                ) \r\n               {}\r\n  \r\n    ngOnInit() {\r\n      this.user = this.storageService.getSession(\"user\");\r\n      this.token = this.storageService.getSession(\"token\");\r\n     this.buscar(\"*\");\r\n    }\r\n  \r\n    search()\r\n    {\r\n      //alert(this.valor);\r\n      this.buscar(this.valor);\r\n    }\r\n  \r\n    buscar(valor :string) {\r\n      //this.posts = [];\r\n      console.log(this.token);\r\n      console.log(valor);\r\n  \r\n      this.graphqlListasService.listas(this.token, valor, 0)\r\n      .subscribe(({ data, loading }) => {\r\n        this.loading = loading;\r\n        this.posts = JSON.parse(JSON.stringify(data)).listas;\r\n        console.log(JSON.stringify(this.posts))\r\n      });\r\n    }\r\n  \r\n    ngOnDestroy() {\r\n  \r\n    }\r\n    \r\n  }\r\n  ","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CarritocomprasComponent } from 'app/carritocompras/carritocompras.component';\r\nimport * as Chartist from 'chartist';\r\nimport { Subscription } from 'rxjs';\r\nimport { GraphqlProductsService} from '../../services/graphql.products.service';\r\nimport { ShoppingCartService, CartItem, Totals } from '../../services/shopping-cart.service';\r\nimport { ShopItem } from '../../models/CartItem'\r\nimport { ProductApi } from '../../models/productapi'\r\nimport { LoginService } from \"../../services/login.service\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { NewUserComponent } from '../new-user/new-user.component';\r\nimport { LogoutComponent } from '../logout/logout.component';\r\nimport { StorageService } from \"../../services/storage.service\";\r\nimport { ListProduct } from 'models/listproduct';\r\nimport { GraphqlSalesService } from 'services/graphql.sales.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit, OnDestroy {\r\n  valor : string;\r\n  token : string;\r\n  user : string;\r\n  loading: boolean;\r\n  posts: any;\r\n\r\n  selectedList: string;\r\n  ListProducts: ListProduct;\r\n  private querySubscription: Subscription;\r\n\r\n  priceList: boolean;\r\n\r\n  constructor(\r\n    private graphqlProductsService: GraphqlProductsService,\r\n    private shoppingCartService: ShoppingCartService,\r\n    private loginService : LoginService,\r\n    private dialog : MatDialog,\r\n    private storageService : StorageService,\r\n    private graphqlSalesServices: GraphqlSalesService\r\n\r\n    ) {}\r\n\r\n  cartState$ = this.shoppingCartService.state$;\r\n  \r\n  addItemToCart(item: any/*ProductApi*/) {\r\n    //alert(JSON.stringify(item));\r\n    var myItem = new ShopItem();\r\n    var myItemTest: any;\r\n    if(this.priceList != true){\r\n      //alert(\"normal\")\r\n      myItem.id = item.id;\r\n      myItem.name = item.description;\r\n      myItem.price = item.precio;\r\n      this.shoppingCartService.addCartItem(myItem);\r\n      console.log(myItem)\r\n    }else if(this.priceList == true){\r\n      //alert(\"filtro\")\r\n      //myItem.id = item.id;\r\n      myItem.name = item.producto.description;\r\n      myItem.price = item.precio;\r\n      console.log(myItem)\r\n      this.shoppingCartService.addCartItem(myItem);\r\n    }\r\n\r\n\r\n  }\r\n  \r\n  checkout(): void {\r\n    // this.shoppingCartService.checkout();\r\n    \r\n    let dialogRef = this.dialog.open(LoginComponent, {\r\n      // data: { state: this.state }, // now uses the observable\r\n      height: '400px',\r\n      width: '400px',\r\n    });\r\n  }\r\n\r\n  logout(): void {\r\n    // this.shoppingCartService.checkout();\r\n    \r\n    let dialogRef = this.dialog.open(LogoutComponent, {\r\n      // data: { state: this.state }, // now uses the observable\r\n      height: '400px',\r\n      width: '400px',\r\n    });\r\n  }\r\n\r\n  newuser(): void {\r\n    // this.shoppingCartService.checkout();\r\n    \r\n    let dialogRef = this.dialog.open(NewUserComponent, {\r\n      // data: { state: this.state }, // now uses the observable\r\n      height: '450px',\r\n      width: '400px',\r\n    });\r\n  }\r\n\r\n  search()\r\n  {\r\n    //alert(this.valor);\r\n    this.buscar(this.valor);\r\n  }\r\n\r\n  buscar(valor :string) {\r\n    //this.posts = [];\r\n    //console.log(this.token);\r\n    console.log(valor);\r\n    \r\n   // alert(this.user + \" : \" +  valor + \"- \" + this.token);\r\n    \r\n    //this.querySubscription = \r\n    this.graphqlProductsService.links(this.token, valor)\r\n      //.valueChanges\r\n      .subscribe(({ data, loading }) => {\r\n        this.loading = loading;\r\n        this.posts = JSON.parse(JSON.stringify(data)).links;\r\n        //console.log(JSON.stringify(this.posts))\r\n\r\n      //  this.querySubscription.unsubscribe();\r\n      });\r\n\r\n  }\r\n  remove(item: CartItem): void {\r\n    this.shoppingCartService.removeCartItem(item);\r\n  }\r\n  ngOnInit() {\r\n/*\r\n    this.querySubscription = this.loginService.getData().subscribe(data => {\r\n      alert(\"print data\"+ data);\r\n      this.user = data.user;\r\n\r\n      this.token = data.token;\r\n      console.log(\"user: \" + this.user);\r\n\r\n      console.log(\"token: \" + this.token);\r\n    });\r\n*/\r\n    this.user = this.storageService.getSession(\"user\");\r\n    this.token = this.storageService.getSession(\"token\");\r\n   this.buscar(\"*\");\r\n   this.QueryListProduct(\"*\");\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    //this.querySubscription.unsubscribe();\r\n  }\r\n  \r\n  startAnimationForLineChart(chart){\r\n      let seq: any, delays: any, durations: any;\r\n      seq = 0;\r\n      delays = 80;\r\n      durations = 500;\r\n\r\n      chart.on('draw', function(data) {\r\n        if(data.type === 'line' || data.type === 'area') {\r\n          data.element.animate({\r\n            d: {\r\n              begin: 600,\r\n              dur: 700,\r\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\r\n              to: data.path.clone().stringify(),\r\n              easing: Chartist.Svg.Easing.easeOutQuint\r\n            }\r\n          });\r\n        } else if(data.type === 'point') {\r\n              seq++;\r\n              data.element.animate({\r\n                opacity: {\r\n                  begin: seq * delays,\r\n                  dur: durations,\r\n                  from: 0,\r\n                  to: 1,\r\n                  easing: 'ease'\r\n                }\r\n              });\r\n          }\r\n      });\r\n\r\n      seq = 0;\r\n  };\r\n  startAnimationForBarChart(chart){\r\n      let seq2: any, delays2: any, durations2: any;\r\n\r\n      seq2 = 0;\r\n      delays2 = 80;\r\n      durations2 = 500;\r\n      chart.on('draw', function(data) {\r\n        if(data.type === 'bar'){\r\n            seq2++;\r\n            data.element.animate({\r\n              opacity: {\r\n                begin: seq2 * delays2,\r\n                dur: durations2,\r\n                from: 0,\r\n                to: 1,\r\n                easing: 'ease'\r\n              }\r\n            });\r\n        }\r\n      });\r\n\r\n      seq2 = 0;\r\n  };\r\n\r\n  QueryListProduct(valor: string){\r\n    this.graphqlProductsService.QueryListProduct(this.token, valor).subscribe(({ data, loading }) => {\r\n      this.loading = loading;\r\n      this.ListProducts = JSON.parse(JSON.stringify(data)).listas;\r\n      //  this.querySubscription.unsubscribe();\r\n      });\r\n  }\r\n\r\n  QueryListFilter(id: number){\r\n    this.graphqlSalesServices.sale(this.token, id).subscribe(({ data, loading }) => {\r\n      console.log(data)\r\n      \r\n      this.loading = loading;\r\n\r\n      // var myData = JSON.parse(JSON.stringify(data)).lista.precios\r\n      // console.log(myData)\r\n      this.posts = JSON.parse(JSON.stringify(data)).lista.precios;\r\n      console.log(JSON.stringify(this.posts))\r\n\r\n      });\r\n  }\r\n\r\n  changeClient(value) {\r\n    console.log(value);\r\n\r\n    this.QueryListFilter(value)\r\n\r\n    this.priceList = true;\r\n    // console.log(this.selectedList)\r\n  }\r\n\r\n  }\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header card-header-danger row\\\">\\r\\n            <h4 class=\\\"card-title\\\">Marca Nueva</h4>\\r\\n            <p class=\\\"card-category\\\">Completa informacion de la marca</p>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"d-flex justify-content-end p-2\\\">\\r\\n\\r\\n            <button\\r\\n              mat-raised-button\\r\\n              type=\\\"button\\\"\\r\\n              style=\\\"float: right\\\"\\r\\n              class=\\\"btn btn-sm bg-danger\\\"\\r\\n              *ngIf=\\\"mode === 'create'\\\"\\r\\n              \\r\\n             (click)=\\\"Marca()\\\"   \\r\\n            >\\r\\n              <i class=\\\"material-icons\\\">save</i>\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              mat-raised-button\\r\\n              type=\\\"button\\\"\\r\\n              style=\\\"float: right\\\"\\r\\n              class=\\\"btn btn-sm bg-danger\\\"\\r\\n              *ngIf=\\\"mode === 'update'\\\"\\r\\n              \\r\\n             (click)=\\\"Marca()\\\"   \\r\\n            >\\r\\n              <i class=\\\"material-icons\\\">save</i>\\r\\n            </button>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"card-body\\\">\\r\\n\\r\\n            <div [formGroup]=\\\"validation\\\" method=\\\"POST\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n               \\r\\n                <!-- *****************INPUT ID***************************-->\\r\\n                <div>\\r\\n                  <!---- <input type=\\\"\\\" name=\\\"id\\\" value=\\\"{{ myMarca.id }}\\\" [(ngModel)]=\\\"myMarca.id\\\" /> --Intentar con  formControlName-->\\r\\n                  <input type=\\\"hidden\\\" id=\\\"id\\\" formControlName=\\\"id\\\">\\r\\n                  \\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-12 col-xs-12\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <!-- *****************INPUT DESCRIPCION***************************-->\\r\\n                    <input\\r\\n                      matInput\\r\\n                      placeholder=\\\"Nombre Marca\\\"\\r\\n                      type=\\\"text\\\"\\r\\n                      maxlength=\\\"200\\\"\\r\\n                      \\r\\n                      formControlName=\\\"description\\\"\\r\\n                    />\\r\\n\\r\\n                  </mat-form-field>\\r\\n                  <div *ngIf=\\\"validation.get('description')?.touched && validation\\\" class=\\\"p-invalid\\\">\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- [(ngModel)]=\\\"myMarca.description\\\" -->\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"clearfix\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Emisor33 } from \"./emisor33\";\r\nimport { Receptor33 } from \"./receptor33\";\r\nimport { Concepto33 } from \"./concepto33\";\r\nimport { CfdiImpuestos33 } from \"./cfdiimpuestos33\";\r\n\r\nexport class Cfdi33 {\r\n    serie : string;\r\n    folio : string;\r\n    formapago: string; \r\n    condicionesdepago : string; \r\n    subtotal : string; \r\n    descuento : string; \r\n    moneda : string; \r\n    total : string; \r\n    tipodecomprobante : string;\r\n    metodopago : string;\r\n    lugarexpedicion : string;\r\n    emisor: Emisor33;\r\n    receptor: Receptor33;\r\n    conceptos: Concepto33[];\r\n    impuestos: CfdiImpuestos33\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-configuracion',\r\n  templateUrl: './configuracion.component.html',\r\n  styleUrls: ['./configuracion.component.css']\r\n})\r\nexport class ConfiguracionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        \\r\\n        <div class=\\\"input-group no-border\\\">\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"valor\\\" name=\\\"valor\\\" class=\\\"form-control\\\" placeholder=\\\"Buscar cliente, serie, folio, importe ...\\\">\\r\\n            <button mat-raised-button (click)=\\\"search()\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n                <i class=\\\"material-icons\\\">search</i>\\r\\n                <div class=\\\"ripple-container\\\"></div>\\r\\n            </button>\\r\\n            \\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n       \\r\\n            <div class=\\\"col-lg-12 col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-warning\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Proveedores - \\r\\n                        \\r\\n                        <a  [routerLink]=\\\"['/admin/admin/new-product']\\\">\\r\\n                           <b> Crear proveedor nuevo  </b>\\r\\n                        <i class=\\\"material-icons\\\">login</i>\\r\\n                           \\r\\n                        </a>\\r\\n                        </h4>\\r\\n                        \\r\\n                    </div>\\r\\n                    <div class=\\\"card-body table-responsive\\\">\\r\\n                        <table class=\\\"table table-hover\\\">\\r\\n                            <thead class=\\\"text-warning\\\">\\r\\n                                <th>Clave</th>\\r\\n                                <th>Url</th>\\r\\n                                <th>Descripcion</th>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let product of posts\\\" >\\r\\n                                    <td>{{ product.id }}</td>\\r\\n                                    <td>{{ product.rfc }}</td>\\r\\n                                    <td>{{ product.nombre }}</td>\\r\\n                                </tr>\\r\\n                              \\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";","import { Component, OnInit } from '@angular/core';\r\nimport { GraphqlLineasService} from '../../services/graphql.lines.service';\r\nimport Swal from 'sweetalert2';\r\nimport { StorageService } from \"../../services/storage.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport internal from 'stream';\r\nimport { LineaApi } from 'models/lineaapi';\r\n\r\n@Component({\r\n  selector: 'app-lineas',\r\n  templateUrl: './lineas.component.html',\r\n  styleUrls: ['./lineas.component.css']\r\n})\r\n\r\nexport class LineasComponent implements OnInit {\r\n\r\n  myLinea = new LineaApi();\r\n\r\n  loading: boolean;\r\n  posts: any;\r\n  user: string;\r\n  token: string;\r\n  valor: string;\r\n\r\n  constructor(\r\n    private graphqlLinea: GraphqlLineasService,\r\n    private graphqlLineasService: GraphqlLineasService,\r\n    private storageService : StorageService,\r\n    private router : Router\r\n  ) \r\n  {}\r\n\r\n  ngOnInit() {\r\n    this.user = this.storageService.getSession(\"user\");\r\n    this.token = this.storageService.getSession(\"token\");\r\n    this.buscar(\"*\");\r\n  }\r\n\r\n  search()\r\n  {\r\n    //alert(this.valor);\r\n    this.buscar(this.valor);\r\n  }\r\n\r\n  buscar(valor :string) {\r\n    //this.posts = [];\r\n    //console.log(this.token);\r\n    //console.log(valor);\r\n\r\n    this.graphqlLineasService.lineas(this.token, valor)\r\n    .subscribe(({ data, loading }) => {\r\n      this.loading = loading;\r\n      this.posts = JSON.parse(JSON.stringify(data)).lineas;\r\n      //console.log(JSON.stringify(this.posts))\r\n    });\r\n  }\r\n\r\n\r\n  deleteThisLinea(idlinea: number){//colocar el id de la marca a eliminar como parametro\r\n\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: 'btn btn-success',\r\n        cancelButton: 'btn btn-danger'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    \r\n    swalWithBootstrapButtons.fire({\r\n      title: '¿Estas seguro que quieres eliminar esta Marca?',\r\n      text: \"No podrás deshacer los cambios.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Si, eliminar',\r\n      cancelButtonText: 'No, cancelar',\r\n      reverseButtons: true\r\n    }).then((result) => {\r\n      \r\n      if (result.isConfirmed) {\r\n\r\n        //console.log(\"Mande una orden a service con id: \"+idlinea);\r\n        this.myLinea.id = (this.myLinea.id)\r\n\r\n        this.graphqlLineasService\r\n        .deleteLinea(\r\n          this.token, idlinea\r\n        )\r\n        .subscribe(\r\n          \r\n        )\r\n        swalWithBootstrapButtons.fire(\r\n          'Eliminado',\r\n          'Marca eliminada correctamente',\r\n          'success'\r\n        )\r\n      } else if (\r\n        /* Read more about handling dismissals below */\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        swalWithBootstrapButtons.fire(\r\n          'Cancelado',\r\n          'Operración cancelada',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  updateThisLinea(idlinea: number){\r\n    \r\n    this.router.navigate(['/admin/admin/new-linea/',idlinea]);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n  }\r\n  \r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-danger row\\\">\\r\\n              <h4 class=\\\"card-title\\\" *ngIf=\\\"mode === 'create'\\\">Crear Nueva Línea </h4>\\r\\n              <h4 class=\\\"card-title\\\" *ngIf=\\\"mode === 'update'\\\">Actualizar Línea </h4>\\r\\n              <p class=\\\"card-category\\\"> - Completa informacion de la línea</p>\\r\\n            </div>\\r\\n  \\r\\n            <div class=\\\"d-flex justify-content-end p-2\\\">\\r\\n  \\r\\n              <button\\r\\n                mat-raised-button\\r\\n                type=\\\"button\\\"\\r\\n                style=\\\"float: right\\\"\\r\\n                class=\\\"btn btn-sm bg-danger\\\"\\r\\n                *ngIf=\\\"mode === 'create'\\\"\\r\\n                \\r\\n               (click)=\\\"Linea()\\\"   \\r\\n              >\\r\\n                <i class=\\\"material-icons\\\">save</i>\\r\\n              </button>\\r\\n  \\r\\n              <button\\r\\n                mat-raised-button\\r\\n                type=\\\"button\\\"\\r\\n                style=\\\"float: right\\\"\\r\\n                class=\\\"btn btn-sm bg-danger\\\"\\r\\n                *ngIf=\\\"mode === 'update'\\\"\\r\\n                \\r\\n               (click)=\\\"Linea()\\\"   \\r\\n              >\\r\\n                <i class=\\\"material-icons\\\">save</i>\\r\\n              </button>\\r\\n  \\r\\n            </div>\\r\\n  \\r\\n            <div class=\\\"card-body\\\">\\r\\n  \\r\\n              <div [formGroup]=\\\"validation\\\" method=\\\"POST\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                 \\r\\n                  <!-- *****************INPUT ID***************************-->\\r\\n                  <div>\\r\\n                    <!---- <input type=\\\"\\\" name=\\\"id\\\" value=\\\"{{ myMarca.id }}\\\" [(ngModel)]=\\\"myMarca.id\\\" /> --Intentar con  formControlName-->\\r\\n                    <input type=\\\"hidden\\\" id=\\\"id\\\" formControlName=\\\"id\\\">\\r\\n                    \\r\\n                  </div>\\r\\n  \\r\\n                  <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-12 col-xs-12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                      <!-- *****************INPUT DESCRIPCION***************************-->\\r\\n                      <input\\r\\n                        matInput\\r\\n                        placeholder=\\\"Nombre linea\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                      />\\r\\n  \\r\\n                    </mat-form-field>\\r\\n                    <div *ngIf=\\\"validation.get('description')?.touched && validation\\\" class=\\\"error\\\">\\r\\n                      <p>\\r\\n                        Introduzca descripción de la línea.\\r\\n                        <i class=\\\"material-icons\\\" style=\\\"float: right\\\">warning</i>\\r\\n                      </p>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <!-- [(ngModel)]=\\\"myMarca.description\\\" -->\\r\\n  \\r\\n                </div>\\r\\n                <div class=\\\"clearfix\\\"></div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";","import { FormControl, ValidationErrors } from \"@angular/forms\";\n\nexport class Validate {\n\n  static isValidTrasladoIVA(control: FormControl): ValidationErrors {\n    const con = control.value;\n    if(con == 0 || con == 0.16 || con == 0.08) \n      return null;\n    else\n      return { trasladoiva : true };\n  }\n\n  static isValidRetencionIVA(control: FormControl): ValidationErrors {\n    const con = control.value;\n    if(con >=0 &&  con <= 0.16) \n      return null;\n    else    \n      return { retencioniva : true };\n  }\n\n  static isValidRetencionISR(control: FormControl): ValidationErrors {\n    const con = control.value;\n    if(con >=0 &&  con <= 0.35) \n      return null;\n    else    \n      return { retencionisr : true };\n  }\n\n/**\n * FALTA RESOLVER\n */\n  static isValidTrasladoIEPS_Tasa(control: FormControl): ValidationErrors {\n    const con = control.value;\n  \n    if(\n        con == 0.265 ||\n        con == 0.3 ||\n        con == 0.53 ||\n        con == 0.5 ||\n        con == 1.6 ||\n        con == 0.304 ||\n        con == 0.25 ||\n        con == 0.09 ||\n        con == 0.08 ||\n        con == 0.07 ||\n        con == 0.06 ||\n        con == 0.03 ||\n        con == 0\n        ) \n      return null;\n    else    \n      return { trasladoieps : true };\n  }\n\n\n  static isValidRetencionIEPS_Tasa(control: FormControl): ValidationErrors {\n    const con = control.value;\n    if(\n        con == 0.265 ||\n        con == 0.3 ||\n        con == 0.53 ||\n        con == 0.5 ||\n        con == 1.6 ||\n        con == 0.304 ||\n        con == 0.25 ||\n        con == 0.09 ||\n        con == 0.08 ||\n        con == 0.07 ||\n        con == 0.06 \n        ) \n      return null;\n    else    \n      return { retencionieps:true };\n  }\n\n\n  static isValidTrasladoRetencionIEPS_Cuota(control: FormControl): ValidationErrors {\n    const con = control.value;\n    if( !(con >= 0 && con <= 59.1449)){ \n      return null;\n    }else{  \n      return { trasladoiepsc : true, retencioniepsc:true  };\n    }\n  }\n\n\n\n}","import { Component, Input } from '@angular/core';\r\n//import { ShoppingCartService, CartItem } from '../../services/shopping-cart.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CheckoutDialog } from '../checkout/checkout.component';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent  {\r\n\r\n  @Input() state: any;\r\n\r\n  constructor(\r\n    /*private shoppingCartService: ShoppingCartService,*/\r\n     private dialog: MatDialog) { }\r\n\r\n  checkout(): void {\r\n    // this.shoppingCartService.checkout();\r\n    let dialogRef = this.dialog.open(CheckoutDialog, {\r\n      // data: { state: this.state }, // now uses the observable\r\n      height: '800px',\r\n      width: '1200px',\r\n    });\r\n  }\r\n}\r\n","export class Emisor40 {\r\n    rfc : string;\r\n    nombre : string;\r\n    regimenfiscal : string;\r\n}","import { Component, OnInit } from \"@angular/core\";\nimport { ProductApi } from \"../../models/productapi\";\nimport { GraphqlProductsService } from \"../../services/graphql.products.service\";\nimport { Router } from \"@angular/router\";\nimport { StorageService } from \"../../services/storage.service\";\nimport { FileUploadService } from \"../../services/file-upload.service\";\nimport { FileUpload } from \"../../models/file-upload\";\nimport Swal from \"sweetalert2\";\nimport { ActivatedRoute, Params } from \"@angular/router\";\nimport { FormGroup, FormControl, Validators, AbstractControl,} from \"@angular/forms\";\n\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { Validate } from './validate';\n@Component({\n  selector: \"app-new-product\",\n  templateUrl: \"./new-product.component.html\",\n  styleUrls: [\"./new-product.component.css\"],\n})\nexport class NewProductComponent implements OnInit {\n  myProduct = new ProductApi();\n  selectedFiles: FileList;\n  currentFileUpload: FileUpload;\n  percentage: number;\n  mytoken: any;\n\n  resultQueryClaveProdServ: any;\n  resultQueryClaveUnidad: any;\n  resultQueryMarca: any;\n  resultQueryLinea: any;\n\n  newProductFG: FormGroup;\n\n  urlImage;\n  event;\n\n  uploadServiceImgURL;\n\n  constructor(\n    private graphqlProduct: GraphqlProductsService,\n    private router: Router,\n    private storageService: StorageService,\n    private uploadService: FileUploadService,\n    private rutaActiva: ActivatedRoute,\n    private spinner: NgxSpinnerService,\n  \n  ) {}\n\n  createForm() {\n    this.newProductFG = new FormGroup({\n      url: new FormControl(\"\", [Validators.required]),\n      noidentificacion: new FormControl(\"\", [\n        Validators.required,\n        Validators.maxLength(10),\n        Validators.pattern(\"^[a-zA-Z0-9_-]+$\"),\n      ]), //Numeros, letras y guiones(bajo y medio),sin espacio\n      precio: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[0-9.]+$\"),\n      ]), //SOlo numeros positivos, enteros y decimales\n      descuento: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[0-9.]+$\"),\n      ]), //SOlo numeros positivos, enteros y decimales\n      retencionieps: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[0-9.]+$\"),\n       // Validate.isValidRetencionIEPS_Tasa,\n       // Validate.isValidTrasladoRetencionIEPS_Cuota,\n      ]), //SOlo numeros positivos, enteros y decimales\n      retencioniva: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[0-9.]+$\"),\n        Validate.isValidRetencionIVA,\n      ]), //SOlo numeros positivos, enteros y decimales\n      retencionisr: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[0-9.]+$\"),\n        Validate.isValidRetencionISR\n      ]), //SOlo numeros positivos, enteros y decimales\n      trasladoiva: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[0-9.]+$\"),\n        Validate.isValidTrasladoIVA,\n        \n      ]), //SOlo numeros positivos, enteros y decimales\n      trasladoieps: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[0-9.]+$\"),\n       // Validate.isValidTrasladoIEPS_Tasa,\n       // Validate.isValidTrasladoRetencionIEPS_Cuota,\n\n      ]), //SOlo numeros positivos, enteros y decimales\n      codigobarras: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[a-zA-Z0-9_-]*$\"),\n      ]), //Numeros, letras y guiones(bajo y medio),sin espacio\n      existencias: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[0-9.]+$\"),\n      ]), //SOlo numeros positivos, enteros y decimales\n      stockmin: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[0-9.]+$\"),\n      ]), //SOlo numeros positivos, enteros y decimales\n      stockmax: new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[0-9.]+$\"),\n      ]), //SOlo numeros positivos, enteros y decimales\n      modelo: new FormControl(\"\", [Validators.required]),\n      description: new FormControl(\"\", [\n        Validators.required,\n        Validators.maxLength(200),\n      ]),\n\n      RadioButtonTrasladoIEPS: new FormControl(\"Tasa\"),\n      RadioButtonRetencionIEPS: new FormControl(\"Tasa\"),\n\n      codigoSatSeleccionado: new FormControl(\"\", this.resultQueryClaveProdServ),\n      claveUnidadSeleccionado: new FormControl(\"\", this.resultQueryClaveUnidad),\n      marcaSeleccionada: new FormControl(\"\", this.resultQueryMarca),\n      lineaSeleccionada: new FormControl(\"\", this.resultQueryLinea),\n\n      inputCodigoSat: new FormControl(\"\"),\n      inputClaveUnidad: new FormControl(\"\"),\n      inputMarca: new FormControl(\"\"),\n      inputLinea: new FormControl(\"\"),\n    }\n   \n    );\n  }\n\n  \n/*\n  changeType() {\n    console.log(this.newProductFG.value.type);\n    if (this.newProductFG.get(\"codigoSatSeleccionado\").value == \"\") {\n      this.newProductFG\n        .get(\"codigoSatSeleccionado\")\n        .setValidators([Validators.required]);\n      this.newProductFG.get(\"codigoSatSeleccionado\").updateValueAndValidity();\n    } else {\n      this.newProductFG.get(\"codigoSatSeleccionado\").clearValidators();\n      this.newProductFG.get(\"codigoSatSeleccionado\").updateValueAndValidity();\n    }\n  }\n*/\n  ngOnInit() {\n    this.createForm();\n\n    this.mytoken = this.storageService.getSession(\"token\");\n\n    if (this.rutaActiva.snapshot.params.id) {\n      this.myProduct.id = this.rutaActiva.snapshot.params.id;\n\n      //console.log('ESTE ES EL ID DEL PRODUCTO A EDITAR',this.rutaActiva.snapshot.params.id);\n\n      this.graphqlProduct\n        .link_getById(this.mytoken, this.rutaActiva.snapshot.params.id)\n        .subscribe(({ data, loading }) => {\n          let posts = JSON.parse(JSON.stringify(data)).link;\n          console.log(JSON.stringify(posts));\n\n          this.newProductFG.patchValue({\n            url: posts.url,\n            noidentificacion: posts.noidentificacion,\n            precio: posts.precio,\n            descuento: posts.descuento,\n            retencionieps: posts.retencionieps,\n            retencioniva: posts.retencioniva,\n            retencionisr: posts.retencionisr,\n            trasladoiva: posts.trasladoiva,\n            trasladoieps: posts.trasladoieps,\n            codigobarras: posts.codigobarras,\n            existencias: posts.existencias,\n            stockmin: posts.stockmin,\n            stockmax: posts.stockmax,\n            modelo: posts.modelo,\n            description: posts.description,\n\n            codigoSatSeleccionado: posts.codigosat.id,\n            claveUnidadSeleccionado: posts.claveunidad.id,\n            marcaSeleccionada: posts.marca.id,\n            lineaSeleccionada: posts.linea.id,\n\n            inputCodigoSat: posts.codigosat.descripcion,\n            inputClaveUnidad: posts.claveunidad.nombre,\n            inputMarca: posts.marca.description,\n            inputLinea: posts.linea.description,\n          });\n\n          this.searchMarcas();\n          this.searchLineas();\n\n          this.searchClaveUnidad();\n          this.searchCodigoSat();\n        });\n    } else {\n      this.myProduct.id = 0;\n      this.myProduct.codigosat = 2;\n    }\n  }\n\n  selectFile(event): void {\n    this.selectedFiles = event.target.files;\n\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n\n      reader.onload = (event: ProgressEvent) => {\n        this.urlImage = (<FileReader>event.target).result;\n      };\n\n      reader.readAsDataURL(event.target.files[0]);\n    }\n\n    this.event = event;\n  }\n\n  upload() {\n    const file = this.selectedFiles.item(0);\n    this.selectedFiles = undefined;\n\n    this.currentFileUpload = new FileUpload(file);\n\n    this.uploadService.pushFileToStorage(this.currentFileUpload).subscribe(\n      (percentage) => {\n        this.percentage = Math.round(percentage);\n      \n        //No sirve  this.newProductFG.controls.url.setValue(this.uploadService.downloadURL);\n        \n        //this.uploadServiceImgURL = this.uploadService.downloadURL;\n      },\n      (error) => {\n        console.log(error);\n      },\n    );\n   \n  }\n\n\n  addProduct() {\n\n    this.graphqlProduct\n          .createLink(\n            this.mytoken,\n            this.myProduct.url = this.newProductFG.get(\"url\").value ,\n            this.myProduct.id ,\n            this.myProduct.noidentificacion = this.newProductFG.get(\"noidentificacion\").value,\n            this.myProduct.precio = this.newProductFG.get(\"precio\").value,\n            this.myProduct.descuento = this.newProductFG.get(\"descuento\").value,\n            this.myProduct.retencionieps = this.newProductFG.get(\"retencionieps\").value,\n            this.myProduct.retencioniva = this.newProductFG.get(\"retencioniva\").value,\n            this.myProduct.retencionisr = this.newProductFG.get(\"retencionisr\").value,\n            this.myProduct.trasladoiva = this.newProductFG.get(\"trasladoiva\").value,\n            this.myProduct.trasladoieps = this.newProductFG.get(\"trasladoieps\").value,\n            this.myProduct.codigobarras = this.newProductFG.get(\"codigobarras\").value,\n            this.myProduct.existencias = this.newProductFG.get(\"existencias\").value,\n            this.myProduct.stockmin = this.newProductFG.get(\"stockmin\").value,\n            this.myProduct.stockmax = this.newProductFG.get(\"stockmax\").value,\n            this.myProduct.codigosat = this.newProductFG.get(\"codigoSatSeleccionado\").value,\n            this.myProduct.claveunidad = this.newProductFG.get(\"claveUnidadSeleccionado\").value,\n            this.myProduct.modelo = this.newProductFG.get(\"modelo\").value,\n            this.myProduct.description = this.newProductFG.get(\"description\").value,\n            this.myProduct.marca = this.newProductFG.get(\"marcaSeleccionada\").value,\n            this.myProduct.linea = this.newProductFG.get(\"lineaSeleccionada\").value\n          )\n          .subscribe(\n            ({ data }) => {\n              if(data){\n                const swalWithBootstrapButtons = Swal.mixin({\n                  customClass: {\n                    confirmButton: \"btn btn-success\",\n                    cancelButton: \"btn btn-danger\",\n                  },\n                  buttonsStyling: false,\n                });\n            \n                swalWithBootstrapButtons\n                  .fire(\n                    \"Guardado correctamente\",\n                    \"Se ha guardado correctamente\",\n                    \"success\",\n                  )\n                  .then(() => {\n                    this.router.navigate([\"/admin/admin/productos\"]);\n                  }); \n              }\n              \n            },\n            (error) => {\n              console.error(\"there was an error sending the query\", error);\n            },\n          );\n  }\n\n  searchClaveUnidad() {\n    this.spinner.show();\n\n    this.graphqlProduct\n      .claveunidades(\n        this.mytoken,\n        this.newProductFG.get(\"inputClaveUnidad\").value,\n      )\n      .subscribe(({ data }) => {\n        this.resultQueryClaveUnidad = JSON.parse(\n          JSON.stringify(data),\n        ).claveunidades;\n        if (data) {\n          this.spinner.hide();\n        }\n\n        //console.log(\"Clave de la unidad\",JSON.stringify(this.resultQueryClaveUnidad));\n      });\n  }\n\n  searchCodigoSat() {\n\n    this.spinner.show();\n    this.graphqlProduct\n      .claveprodserv(\n        this.mytoken,\n        this.newProductFG.get(\"inputCodigoSat\").value,\n      )\n      .subscribe(({ data }) => {\n        this.resultQueryClaveProdServ = JSON.parse(\n          JSON.stringify(data),\n        ).claveprodserv;\n        //if(this.resultQueryClaveProdServ) {\n        //  console.log(\"Terminado\");\n        //}\n        if (data) {\n          this.spinner.hide();\n        }\n      });\n  }\n\n  searchMarcas() {\n    this.spinner.show();\n    console.log(this.mytoken);\n    this.graphqlProduct\n      .marcas(this.mytoken, this.newProductFG.get(\"inputMarca\").value)\n      .subscribe(({ data }) => {\n        this.resultQueryMarca = JSON.parse(JSON.stringify(data)).marcas;\n\n        //console.log(\"Marca: \",JSON.stringify(this.resultQueryMarca));\n        if (data) {\n          this.spinner.hide();\n        }\n      });\n  }\n\n  searchLineas() {\n    this.spinner.show();\n    this.graphqlProduct\n      .lineas(this.mytoken, this.newProductFG.get(\"inputLinea\").value)\n      .subscribe(({ data }) => {\n        //this.lineaSeleccionada = \"\";\n        this.resultQueryLinea = JSON.parse(JSON.stringify(data)).lineas;\n        if (data) {\n          this.spinner.hide();\n        }\n        // console.log(\"Linea: \",JSON.stringify(this.resultQueryLinea));\n      });\n  }\n}\n","import { Retencion33 } from \"./retencion33\";\r\nimport { Traslado33 } from \"./traslado33\"\r\n\r\nexport class ConceptoImpuestos33 {\r\n   traslados : Traslado33[];\r\n   retenciones : Retencion33[];\r\n}","export class LineaApi {\n\tid  : number;\n\tdescription : string;\n\t\n}  ","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { GraphqlClientsService} from '../../services/graphql.clients.service';\r\nimport { StorageService } from \"../../services/storage.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-clientes',\r\n  templateUrl: './clientes.component.html',\r\n  styleUrls: ['./clientes.component.css']\r\n})\r\nexport class ClientesComponent implements OnInit {\r\n\r\n\r\n  loading: boolean;\r\n  posts: any;\r\n  user: string;\r\n  token: string;\r\n\r\n  private querySubscription: Subscription;\r\n\r\n  constructor(private graphqlClientsService: GraphqlClientsService,\r\n              private storageService : StorageService\r\n    ) {\r\n  \r\n    this.user = this.storageService.getSession(\"user\");\r\n    this.token = this.storageService.getSession(\"token\");\r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.querySubscription = this.graphqlClientsService.receptor(this.token, \"*\")\r\n      //.valueChanges\r\n      .subscribe(({ data, loading }) => {\r\n        this.loading = loading;\r\n        this.posts = JSON.parse(JSON.stringify(data)).receptor;\r\n        console.log(JSON.stringify(this.posts))\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.querySubscription.unsubscribe();\r\n  }\r\n  \r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Apollo, gql} from 'apollo-angular';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n\r\nconst COLONIAS = gql`\r\n  query Colonias ($codigopostal: String!) {\r\n    colonias(codigopostal: $codigopostal) {\r\n      id\r\n      codigopostal\r\n      colonia\r\n      nombreAsentamiento\r\n    }\r\n  }\r\n`;\r\n\r\nconst USOCFDI = gql`\r\n  query Usocfdi ($search: String!) {\r\n    usocfdi(search: $search) {\r\n        usocfdi\r\n        descripcion\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst FORMAPAGO = gql`\r\n  query Formapago ($search: String!) {\r\n    formapago(search: $search) {\r\n        formapago\r\n        descripcion\r\n    }\r\n  }\r\n`;\r\n\r\nconst METODOPAGO = gql`\r\n  query Metodopago ($search: String!) {\r\n    metodopago(search: $search) {\r\n       metodopago\r\n       descripcion\r\n    }\r\n  }\r\n`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class GraphqlCatalogosService  {\r\n\r\n  loading: boolean;\r\n  posts: any;\r\n  //private querySubscription: Subscription;\r\n\r\n  constructor(private apollo: Apollo) {}\r\n\r\n\r\n  metodopago(mytoken: string, valor : string) {\r\n    \r\n    return this.apollo.query({\r\n      query: METODOPAGO,\r\n      variables: {\r\n        search: valor\r\n      }, \r\n      context: {\r\n        // example of setting the headers with context per operation\r\n        headers: new HttpHeaders().set('Authorization', 'JWT ' + mytoken),\r\n      },\r\n    });\r\n  //}\r\n\r\n}\r\n\r\n  \r\n  formapago(mytoken: string, valor : string) {\r\n    \r\n    return this.apollo.query({\r\n      query: FORMAPAGO,\r\n      variables: {\r\n        search: valor\r\n      }, \r\n      context: {\r\n        // example of setting the headers with context per operation\r\n        headers: new HttpHeaders().set('Authorization', 'JWT ' + mytoken),\r\n      },\r\n    });\r\n  //}\r\n\r\n}\r\n\r\n  usocfdi(mytoken: string, valor : string) {\r\n    \r\n      return this.apollo.query({\r\n        query: USOCFDI,\r\n        variables: {\r\n          search: valor\r\n        }, \r\n        context: {\r\n          // example of setting the headers with context per operation\r\n          headers: new HttpHeaders().set('Authorization', 'JWT ' + mytoken),\r\n        },\r\n      });\r\n    //}\r\n  \r\n  }\r\n\r\n  colonias(mytoken: string, codigopostal : string) {\r\n    \r\n    return this.apollo.query({\r\n      query: COLONIAS,\r\n      variables: {\r\n        codigopostal: codigopostal\r\n      }, \r\n      context: {\r\n        // example of setting the headers with context per operation\r\n        headers: new HttpHeaders().set('Authorization', 'JWT ' + mytoken),\r\n      },\r\n    });\r\n  //}\r\n\r\n}\r\n\r\n   \r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-warning\\\">\\r\\n                        <h4 class=\\\"card-title\\\">New Cliente</h4>\\r\\n                        <p class=\\\"card-category\\\">Complete your profile</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <form>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-5\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"Company (disabled)\\\" disabled>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"Username\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                      <input matInput placeholder=\\\"Email address\\\" type=\\\"email\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                    <input matInput placeholder=\\\"Fist Name\\\" type=\\\"text\\\">\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                    <input matInput placeholder=\\\"Last Name\\\" type=\\\"text\\\">\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                    <input matInput placeholder=\\\"Adress\\\" type=\\\"text\\\">\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                    <input matInput placeholder=\\\"City\\\" type=\\\"text\\\">\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                    <input matInput placeholder=\\\"Country\\\" type=\\\"text\\\">\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                    <input matInput placeholder=\\\"Postal Code\\\" type=\\\"text\\\">\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                  <label>About Me</label>\\r\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                     <textarea matInput placeholder=\\\"Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.\\\"></textarea>\\r\\n                                   </mat-form-field>\\r\\n                                    <!-- <div class=\\\"form-group\\\">\\r\\n  \\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label class=\\\"bmd-label-floating\\\"> Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.</label>\\r\\n                                            <textarea class=\\\"form-control\\\" rows=\\\"5\\\"></textarea>\\r\\n                                        </div>\\r\\n                                    </div> -->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\">Update Profile</button>\\r\\n                            <div class=\\\"clearfix\\\"></div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"card card-profile\\\">\\r\\n                    <div class=\\\"card-avatar\\\">\\r\\n                        <a href=\\\"javascript:void(0)\\\">\\r\\n                            <img class=\\\"img\\\" src=\\\"./assets/img/faces/marc.jpg\\\" />\\r\\n                        </a>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <h6 class=\\\"card-category text-gray\\\">CEO / Co-Founder</h6>\\r\\n                        <h4 class=\\\"card-title\\\">Alec Thompson</h4>\\r\\n                        <p class=\\\"card-description\\\">\\r\\n                            Don't be scared of the truth because we need to restart the human foundation in truth And I love you like Kanye loves Kanye I love Rick Owens’ bed design but the back is...\\r\\n                        </p>\\r\\n                        <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-danger btn-round\\\">Follow</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hcmNhcy9tYXJjYXMuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NmZGkvY2ZkaS5jb21wb25lbnQuY3NzIn0= */\";","import { Injectable } from \"@angular/core\";\r\nimport { Apollo, gql } from \"apollo-angular\";\r\nimport { HttpHeaders } from \"@angular/common/http\";\r\n\r\n\r\nconst MARCAS = gql`\r\n  query Marcas($search: String!) {\r\n    marcas(search: $search) {\r\n      id\r\n      description\r\n      postedBy {\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATEMARCA = gql`\r\nmutation CreateMarca($idmarca: Int!, $description: String!) {\r\n  createMarca(idmarca: $idmarca, description: $description){\r\n    id\r\n    description\r\n  }\r\n}\r\n`;\r\n\r\nconst DELETEMARCA = gql`\r\nmutation DeleteMarca($idmarca: Int!){\r\n  deleteMarca(idmarca: $idmarca) {\r\n    id\r\n  }\r\n}`;\r\n\r\nconst MARCA = gql`\r\n  query Marca($idmarca: Int!) {\r\n    marca(idmarca: $idmarca) {\r\n      id\r\n      description\r\n      postedBy {\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class GraphqlMarcasService {\r\n  loading: boolean;\r\n  posts: any;\r\n  //private querySubscription: Subscription;\r\n\r\n  constructor(private apollo: Apollo) {}\r\n\r\n  \r\n  createMarca(\r\n    mytoken: string,\r\n    description: string,\r\n    idmarca: number,\r\n    \r\n  ) {\r\n    //console.log(\"token auth = \" + mytoken);\r\n    return this.apollo.mutate({\r\n      mutation: CREATEMARCA,\r\n      variables: {\r\n        idmarca: idmarca,\r\n        description: description,\r\n        \r\n      },\r\n      context: {\r\n        // example of setting the headers with context per operation\r\n        headers: new HttpHeaders().set(\"Authorization\", \"JWT \" + mytoken)\r\n      },\r\n    });\r\n  }\r\n\r\n  deleteMarca(\r\n    mytoken: string,\r\n    idmarca: number,\r\n  ){\r\n    console.log(\"token: \"+mytoken+\" id a rematar: \"+idmarca);\r\n\r\n    return this.apollo.mutate({\r\n      mutation: DELETEMARCA,\r\n      variables: {\r\n        idmarca: idmarca,\r\n      },\r\n      context: {\r\n        // example of setting the headers with context per operation\r\n        headers: new HttpHeaders().set(\"Authorization\", \"JWT \" + mytoken),\r\n      },\r\n    });\r\n  }\r\n\r\n  marcas(mytoken: string, valor: string) {\r\n    return this.apollo.query({\r\n      query: MARCAS,\r\n      variables: {\r\n        search: valor,\r\n      },\r\n      context: {\r\n        // example of setting the headers with context per operation\r\n        headers: new HttpHeaders().set(\"Authorization\", \"JWT \" + mytoken),\r\n      },\r\n    });\r\n  }\r\n\r\n  marca(mytoken: string, valor: number) {\r\n    return this.apollo.query({\r\n      query: MARCA,\r\n      variables: {\r\n        idmarca: valor,\r\n      },\r\n      context: {\r\n        // example of setting the headers with context per operation\r\n        headers: new HttpHeaders().set(\"Authorization\", \"JWT \" + mytoken),\r\n      },\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GraphqlListasService } from '../../services/graphql.listas.service';\r\nimport { StorageService } from \"../../services/storage.service\";\r\n\r\n@Component({\r\n  selector: 'app-listascompra',\r\n  templateUrl: './listascompra.component.html',\r\n  styleUrls: ['./listascompra.component.css']\r\n})\r\nexport class ListascompraComponent implements OnInit {\r\n      loading: boolean;\r\n      posts: any;\r\n      //private querySubscription: Subscription;\r\n      user: string;\r\n      token: string;\r\n      valor: string;\r\n    \r\n      constructor(private graphqlListasService: GraphqlListasService,\r\n                  private storageService : StorageService\r\n                  ) \r\n                 {}\r\n    \r\n      ngOnInit() {\r\n        this.user = this.storageService.getSession(\"user\");\r\n        this.token = this.storageService.getSession(\"token\");\r\n       this.buscar(\"*\");\r\n      }\r\n    \r\n      search()\r\n      {\r\n        //alert(this.valor);\r\n        this.buscar(this.valor);\r\n      }\r\n    \r\n      buscar(valor :string) {\r\n        //this.posts = [];\r\n        console.log(this.token);\r\n        console.log(valor);\r\n    \r\n        this.graphqlListasService.listas(this.token, valor, 1)\r\n        .subscribe(({ data, loading }) => {\r\n          this.loading = loading;\r\n          this.posts = JSON.parse(JSON.stringify(data)).listas;\r\n          console.log(JSON.stringify(this.posts))\r\n        });\r\n      }\r\n    \r\n      ngOnDestroy() {\r\n    \r\n      }\r\n      \r\n    }\r\n    ","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb3ZlZWRvcmVzL3Byb3ZlZWRvcmVzLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<div class=\\\"main-content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header card-header-danger row\\\">\\n            <h4 class=\\\"card-title\\\">Product Nuevo</h4>\\n            <p class=\\\"card-category\\\">Completa informacion del producto</p>\\n          </div>\\n\\n          <div class=\\\"card-body\\\">\\n            <form novalidate [formGroup]=\\\"newProductFG\\\">\\n              <div class=\\\"d-flex justify-content-end p-2\\\">\\n                <button\\n                  type=\\\"submit\\\"\\n                  [disabled]=\\\"newProductFG.invalid\\\"\\n                  style=\\\"float: right\\\"\\n                  class=\\\"btn btn-sm bg-danger\\\"\\n                  (click)=\\\"addProduct()\\\"\\n                >\\n                  <i class=\\\"material-icons\\\">save</i>\\n                </button>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <!-- ********** SELECTOR DE IMAGENES ********-->\\n                <div class=\\\"col-12 col-sm-12 col-md-6 col-lg-6 col-xs-6\\\">\\n                  <label>\\n                    <input\\n                      type=\\\"file\\\"\\n                      class=\\\"text-nowrap text-truncate\\\"\\n                      (change)=\\\"selectFile($event)\\\"\\n                    />\\n                  </label>\\n\\n                  <button\\n                    class=\\\"btn btn-success btn-sm\\\"\\n                    [disabled]=\\\"!selectedFiles\\\"\\n                    (click)=\\\"upload()\\\"\\n                  >\\n                    Upload\\n                  </button>\\n\\n                  <div *ngIf=\\\"currentFileUpload\\\" class=\\\"progress mt-2\\\">\\n                    <div\\n                      class=\\\"progress-bar progress-bar-info\\\"\\n                      role=\\\"progressbar\\\"\\n                      attr.aria-valuenow=\\\"{{ percentage }}\\\"\\n                      aria-valuemin=\\\"0\\\"\\n                      aria-valuemax=\\\"100\\\"\\n                      [ngStyle]=\\\"{ width: percentage + '%' }\\\"\\n                    >\\n                      {{ percentage }}%\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-12 col-sm-12 col-md-6 col-lg-6 col-xs-6\\\">\\n                  <div\\n                    class=\\\"d-flex justify-content-around shadow\\\"\\n                    style=\\\"max-width: 80%; max-height: 100%\\\"\\n                  >\\n                    <img\\n                      [src]=\\\"urlImage\\\"\\n                      alt=\\\"Vista previa\\\"\\n                      width=\\\"80%\\\"\\n                      height=\\\"80%\\\"\\n                    />\\n                  </div>\\n                </div>\\n\\n                <!--********** Número de identificación ********* -->\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-6 col-xs-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input\\n                        matInput\\n                        class=\\\"form-control\\\"\\n                        type=\\\"text\\\"\\n                        placeholder=\\\"Número de identificación.\\\"\\n                        formControlName=\\\"noidentificacion\\\"\\n                    \\n                      />\\n                    </mat-form-field>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG\\n                        .get('noidentificacion')\\n                        .hasError('required') &&\\n                      newProductFG.get('noidentificacion').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Debe indicar un número de identificación.\\n                      <i class=\\\"material-icons\\\" style=\\\"float: right\\\">warning</i>\\n                    </p>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG\\n                        .get('noidentificacion')\\n                        .hasError('maxlength') &&\\n                      newProductFG.get('noidentificacion').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      El número maximo de caracteres es 10.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG\\n                        .get('noidentificacion')\\n                        .hasError('pattern') &&\\n                      newProductFG.get('noidentificacion').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Solo se permiten números, letras y guiones.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <!--********** Código de barras ********* -->\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-6 col-xs-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input\\n                        matInput\\n                        matInput\\n                        matInput\\n                        class=\\\"form-control\\\"\\n                        type=\\\"text\\\"\\n                        placeholder=\\\"Código de barras.\\\"\\n                        formControlName=\\\"codigobarras\\\"\\n                      />\\n                    </mat-form-field>\\n                  </div>\\n\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('codigobarras').hasError('required') &&\\n                      newProductFG.get('codigobarras').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Debe indicar un codigo de barras.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('codigobarras').hasError('pattern') &&\\n                      newProductFG.get('codigobarras').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Solo se permiten números, letras y guiones sin espacio.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <!--********** Descripción ********* -->\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-12 col-xs-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input\\n                        matInput\\n                        class=\\\"form-control\\\"\\n                        type=\\\"text\\\"\\n                        placeholder=\\\"Descripción.\\\"\\n                        formControlName=\\\"description\\\"\\n                      />\\n                    </mat-form-field>\\n                  </div>\\n\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('description').hasError('required') &&\\n                      newProductFG.get('description').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Debe colocar una descripción del producto.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('description').hasError('maxlength') &&\\n                      newProductFG.get('description').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      La descripción no puede ser mayor a 200 caracteres.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <!--********** URL ********* -->\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-12 col-xs-12\\\">\\n                  <div class=\\\"form-group\\\" >\\n                    <mat-form-field class=\\\"example-full-width \\\" >\\n                      <input \\n                        matInput\\n                        class=\\\"form-control\\\"\\n                        type=\\\"url\\\"\\n                        placeholder=\\\"URL de la imagen...\\\"\\n\\n                        formControlName=\\\"url\\\"\\n\\n                      />\\n                    </mat-form-field>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('url').hasError('required') &&\\n                      newProductFG.get('url').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Debe indicar una URL de la imagen del producto.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <!--********** Precio ********* -->\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-4 col-xs-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input\\n                        matInput\\n                        class=\\\"form-control\\\"\\n                        type=\\\"number\\\"\\n                        placeholder=\\\"Precio.\\\"\\n                        formControlName=\\\"precio\\\"\\n                      />\\n                    </mat-form-field>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('precio').hasError('required') &&\\n                      newProductFG.get('precio').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Debe indicar el precio del producto.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('precio').hasError('pattern') &&\\n                      newProductFG.get('precio').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Solo se permiten números positivos, enteros y decimales.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <!--********** Descuento ********* -->\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-4 col-xs-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input\\n                        matInput\\n                        class=\\\"form-control\\\"\\n                        type=\\\"number\\\"\\n                        placeholder=\\\"Descuento.\\\"\\n                        formControlName=\\\"descuento\\\"\\n                      />\\n                    </mat-form-field>\\n                  </div>\\n\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('descuento').hasError('required') &&\\n                      newProductFG.get('descuento').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Debe indicar una cantidad de descuento.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('descuento').hasError('pattern') &&\\n                      newProductFG.get('descuento').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Solo se permiten números positivos, enteros y decimales.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <!--********** Modelo ********* -->\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-4 col-xs-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input\\n                        matInput\\n                        class=\\\"form-control\\\"\\n                        type=\\\"text\\\"\\n                        placeholder=\\\"Modelo.\\\"\\n                        formControlName=\\\"modelo\\\"\\n                      />\\n                    </mat-form-field>\\n                  </div>\\n\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('modelo').hasError('required') &&\\n                      newProductFG.get('modelo').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Debe indicar un modelo.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <!--============= Marcas ============ -->\\n\\n                <div class=\\\"col-10 col-sm-5 col-md-5 col-lg-5 col-xs-5\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input\\n                      matInput\\n                      placeholder=\\\"Buscar marca...\\\"\\n                      type=\\\"search\\\"\\n                      formControlName=\\\"inputMarca\\\"\\n                    />\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-2 col-sm-1 col-md-1 col-lg-1 col-xs-1\\\">\\n                  <button\\n                    mat-raised-button\\n                    type=\\\"button\\\"\\n                    style=\\\"float: right\\\"\\n                    class=\\\"btn btn-sm bg-primary\\\"\\n                    (click)=\\\"searchMarcas()\\\"\\n                  >\\n                    <i class=\\\"material-icons\\\">search</i>\\n                  </button>\\n                </div>\\n\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-6 col-xs-6\\\">\\n                  <select\\n                    class=\\\"form-control shadow\\\"\\n                    formControlName=\\\"marcaSeleccionada\\\"\\n                    style=\\\"width: 100%\\\"\\n                  >\\n                    <option\\n                      *ngFor=\\\"let marca of resultQueryMarca\\\"\\n                      [ngValue]=\\\"marca.id\\\"\\n                    >\\n                      {{ marca.description }}\\n                    </option>\\n                  </select>\\n                </div>\\n\\n                <!-- \\n                <div\\n                  class=\\\"col-4 col-sm-2 col-md-2 col-lg-2 col-xs-2\\\"\\n                  *ngIf=\\\"resultQueryMarca\\\"\\n                >\\n                  <div *ngFor=\\\"let marca of resultQueryMarca\\\">\\n                    <label\\n                      class=\\\"form-control labelCodigoSat\\\"\\n                      *ngIf=\\\"\\n                        marca.id == newProductFG.get('marcaSeleccionada').value\\n                      \\\"\\n                      >{{ marca.id }}</label\\n                    >\\n                  </div>\\n                </div>\\n                -->\\n\\n                <!--============= Linea ============   -->\\n\\n                <div class=\\\"col-10 col-sm-5 col-md-5 col-lg-5 col-xs-5\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input\\n                      matInput\\n                      placeholder=\\\"Buscar linea...\\\"\\n                      type=\\\"search\\\"\\n                      formControlName=\\\"inputLinea\\\"\\n                    />\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-2 col-sm-1 col-md-1 col-lg-1 col-xs-1\\\">\\n                  <button\\n                    mat-raised-button\\n                    type=\\\"button\\\"\\n                    style=\\\"float: right\\\"\\n                    class=\\\"btn btn-sm bg-primary\\\"\\n                    (click)=\\\"searchLineas()\\\"\\n                  >\\n                    <i class=\\\"material-icons\\\">search</i>\\n                  </button>\\n                </div>\\n\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-6 col-xs-6\\\">\\n                  <select\\n                    class=\\\"form-control shadow\\\"\\n                    formControlName=\\\"lineaSeleccionada\\\"\\n                    style=\\\"width: 100%\\\"\\n                  >\\n                    <option\\n                      *ngFor=\\\"let linea of resultQueryLinea\\\"\\n                      [ngValue]=\\\"linea.id\\\"\\n                    >\\n                      {{ linea.description }}\\n                    </option>\\n                  </select>\\n                </div>\\n\\n                <!-- \\n                <div\\n                  class=\\\"col-4 col-sm-2 col-md-2 col-lg-2 col-xs-2\\\"\\n                  *ngIf=\\\"resultQueryMarca\\\"\\n                >\\n                  <div *ngFor=\\\"let linea of resultQueryLinea\\\">\\n                    <label\\n                      class=\\\"form-control labelCodigoSat\\\"\\n                      *ngIf=\\\"linea.id == newProductFG.get('lineaSeleccionada').value\\n                      \\\"\\n                      >{{ marca.id }}</label\\n                    >\\n                  </div>\\n                </div>\\n                -->\\n\\n                <!--********** Existencias ********* -->\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-4 col-xs-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input\\n                        matInput\\n                        class=\\\"form-control\\\"\\n                        type=\\\"number\\\"\\n                        placeholder=\\\"Existencias.\\\"\\n                        formControlName=\\\"existencias\\\"\\n                      />\\n                    </mat-form-field>\\n                  </div>\\n\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('existencias').hasError('required') &&\\n                      newProductFG.get('existencias').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Debe indicar una cantidad de existencias.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('existencias').hasError('pattern') &&\\n                      newProductFG.get('existencias').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Solo se permiten números positivos, enteros y decimales<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <!--********** Stock minimo ********* -->\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-4 col-xs-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input\\n                        matInput\\n                        class=\\\"form-control\\\"\\n                        type=\\\"number\\\"\\n                        placeholder=\\\"Stock minimo.\\\"\\n                        formControlName=\\\"stockmin\\\"\\n                      />\\n                    </mat-form-field>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('stockmin').hasError('required') &&\\n                      newProductFG.get('stockmin').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Debe indicar una cantidad de stock minimo.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('stockmin').hasError('pattern') &&\\n                      newProductFG.get('stockmin').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Solo se permiten números positivos, enteros y decimales<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <!--********** Stock maximo ********* -->\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-4 col-xs-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input\\n                        matInput\\n                        class=\\\"form-control\\\"\\n                        type=\\\"number\\\"\\n                        placeholder=\\\"Stock maximo.\\\"\\n                        formControlName=\\\"stockmax\\\"\\n                      />\\n                    </mat-form-field>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('stockmax').hasError('required') &&\\n                      newProductFG.get('stockmax').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Debe indicar una cantidad de stock maximo.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('stockmax').hasError('pattern') &&\\n                      newProductFG.get('stockmax').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Solo se permiten números positivos, enteros y decimales<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <!--============= Código sat ============ -->\\n\\n                <div class=\\\"col-10 col-sm-5 col-md-5 col-lg-5 col-xs-5\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input\\n                      matInput\\n                      placeholder=\\\"Buscar código sat..\\\"\\n                      type=\\\"search\\\"\\n                      formControlName=\\\"inputCodigoSat\\\"\\n                    />\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-2 col-sm-1 col-md-1 col-lg-1 col-xs-1\\\">\\n                  <button\\n                    mat-raised-button\\n                    type=\\\"button\\\"\\n                    style=\\\"float: right\\\"\\n                    class=\\\"btn btn-sm bg-primary\\\"\\n                    (click)=\\\"searchCodigoSat()\\\"\\n                  >\\n                    <i class=\\\"material-icons\\\">search</i>\\n                  </button>\\n                </div>\\n\\n                <div class=\\\"col-8 col-sm-4 col-md-4 col-lg-4 col-xs-4\\\">\\n                  <select\\n                    class=\\\"form-control shadow\\\"\\n                    formControlName=\\\"codigoSatSeleccionado\\\"\\n                    style=\\\"width: 100%\\\"\\n                  >\\n                    <option\\n                      *ngFor=\\\"let codigoSat of resultQueryClaveProdServ\\\"\\n                      [ngValue]=\\\"codigoSat.id\\\"\\n                    >\\n                      {{ codigoSat.descripcion }}\\n                    </option>\\n                  </select>\\n                </div>\\n\\n                <div\\n                  class=\\\"col-4 col-sm-2 col-md-2 col-lg-2 col-xs-2\\\"\\n                  *ngIf=\\\"resultQueryClaveProdServ\\\"\\n                >\\n                  <div *ngFor=\\\"let codigoSat of resultQueryClaveProdServ\\\">\\n                    <label\\n                      class=\\\"form-control labelCodigoSat\\\"\\n                      *ngIf=\\\"\\n                        codigoSat.id ==\\n                        newProductFG.get('codigoSatSeleccionado').value\\n                      \\\"\\n                      >{{ codigoSat.claveprodserv }}</label\\n                    >\\n                  </div>\\n                </div>\\n\\n                <!--============= Código de la unidad ============ -->\\n                <div class=\\\"col-10 col-sm-5 col-md-5 col-lg-5 col-xs-5\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input\\n                      matInput\\n                      placeholder=\\\"Buscar clave Ej; Pieza, Litro, etc..\\\"\\n                      type=\\\"search\\\"\\n                      formControlName=\\\"inputClaveUnidad\\\"\\n                    />\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-2 col-sm-1 col-md-1 col-lg-1 col-xs-1\\\">\\n                  <button\\n                    mat-raised-button\\n                    type=\\\"button\\\"\\n                    style=\\\"float: right\\\"\\n                    class=\\\"btn btn-sm bg-primary\\\"\\n                    (click)=\\\"searchClaveUnidad()\\\"\\n                  >\\n                    <i class=\\\"material-icons\\\">search</i>\\n                  </button>\\n                </div>\\n\\n                <div class=\\\"col-8 col-sm-4 col-md-4 col-lg-4 col-xs-4\\\">\\n                  <select\\n                    class=\\\"form-control shadow\\\"\\n                    formControlName=\\\"claveUnidadSeleccionado\\\"\\n                    style=\\\"width: 100%\\\"\\n                  >\\n                    <option\\n                      *ngFor=\\\"let claveUnidad of resultQueryClaveUnidad\\\"\\n                      [ngValue]=\\\"claveUnidad.id\\\"\\n                    >\\n                      {{ claveUnidad.nombre }}\\n                    </option>\\n                  </select>\\n                </div>\\n\\n                <div\\n                  class=\\\"col-4 col-sm-2 col-md-2 col-lg-2 col-xs-2\\\"\\n                  *ngIf=\\\"resultQueryClaveUnidad\\\"\\n                >\\n                  <div *ngFor=\\\"let claveUnidad of resultQueryClaveUnidad\\\">\\n                    <label\\n                      class=\\\"form-control labelCodigoSat\\\"\\n                      *ngIf=\\\"\\n                        claveUnidad.id ==\\n                        newProductFG.get('claveUnidadSeleccionado').value\\n                      \\\"\\n                      >{{ claveUnidad.claveunidad }}</label\\n                    >\\n                  </div>\\n                </div>\\n\\n                <!--********** Traslado IVA ********* -->\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-4 col-xs-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input\\n                        matInput\\n                        class=\\\"form-control\\\"\\n                        type=\\\"number\\\"\\n                        placeholder=\\\"Traslado IVA.\\\"\\n                        formControlName=\\\"trasladoiva\\\"\\n                      />\\n                    </mat-form-field>\\n                  </div>\\n\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('trasladoiva').hasError('required') &&\\n                      newProductFG.get('trasladoiva').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Debe indicar una cantidad de traslado IVA.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('trasladoiva').hasError('pattern') &&\\n                      newProductFG.get('trasladoiva').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Solo se permiten números positivos, enteros y decimales.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('trasladoiva').hasError('trasladoiva') &&\\n                      !newProductFG.get('trasladoiva').hasError('required') &&\\n                      newProductFG.get('trasladoiva').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Valores validos: 0, 0.16, 0.08<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <!--********** Traslado IEPS ********* -->\\n\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-4 col-xs-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      Traslado IEPS\\n                      <input\\n                        type=\\\"radio\\\"\\n                        formControlName=\\\"RadioButtonTrasladoIEPS\\\"\\n                        value=\\\"Tasa\\\"\\n                      />\\n                      \\n                      Tasa\\n                      <input\\n                        type=\\\"radio\\\"\\n                        formControlName=\\\"RadioButtonTrasladoIEPS\\\"\\n                        value=\\\"Cuota\\\"\\n                      />\\n                      \\n                      Cuota\\n\\n                      <input\\n                        matInput\\n                        class=\\\"form-control\\\"\\n                        type=\\\"number\\\"\\n                        formControlName=\\\"trasladoieps\\\"\\n                      />\\n                    </mat-form-field>\\n                  </div>\\n\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('trasladoieps').hasError('required') &&\\n                      newProductFG.get('trasladoieps').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Debe indicar una cantidad de traslado IEPS.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('trasladoieps').hasError('pattern') &&\\n                      newProductFG.get('trasladoieps').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Solo se permiten números positivos, enteros y decimales.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n\\n                \\n\\n                <div\\n                class=\\\"error\\\"\\n                *ngIf=\\\"\\n                  newProductFG.get('trasladoieps').hasError('trasladoieps') &&\\n                  newProductFG.get('RadioButtonTrasladoIEPS').value.includes('Tasa') &&\\n\\n                  !newProductFG.get('trasladoieps').hasError('required') &&\\n                  newProductFG.get('trasladoieps').touched\\n                \\\"\\n              >\\n                <p>\\n                  Valores validos: 0.265, 0.3, 0.53, 0.5, 1.6, 0.304, 0.25, 0.09 0.08, 0.07, 0.06<i\\n                    class=\\\"material-icons\\\"\\n                    style=\\\"float: right\\\"\\n                    >warning</i\\n                  >\\n                </p>\\n              </div>\\n\\n\\n              <div\\n              class=\\\"error\\\"\\n              *ngIf=\\\"\\n                newProductFG.get('trasladoieps').hasError('trasladoiepsc') &&\\n                newProductFG.get('RadioButtonTrasladoIEPS').value.includes('Cuota') &&\\n                !newProductFG.get('trasladoieps').hasError('required') &&\\n                newProductFG.get('trasladoieps').touched\\n              \\\"\\n            >\\n              <p>\\n                Valores validos: 0 al 59.1449<i\\n                  class=\\\"material-icons\\\"\\n                  style=\\\"float: right\\\"\\n                  >warning</i\\n                >\\n              </p>\\n            </div>\\n\\n\\n                </div>\\n\\n                <!--********** Reteción IVA ********* -->\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-4 col-xs-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input\\n                        matInput\\n                        class=\\\"form-control\\\"\\n                        type=\\\"number\\\"\\n                        placeholder=\\\"Retención IVA.\\\"\\n                        formControlName=\\\"retencioniva\\\"\\n                      />\\n                    </mat-form-field>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('retencioniva').hasError('required') &&\\n                      newProductFG.get('retencioniva').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Debe indicar una cantidad de retención IVA.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('retencioniva').hasError('pattern') &&\\n                      newProductFG.get('retencioniva').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Solo se permiten números positivos, enteros y decimales.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG\\n                        .get('retencioniva')\\n                        .hasError('retencioniva') &&\\n                      !newProductFG.get('retencioniva').hasError('required') &&\\n                      newProductFG.get('retencioniva').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Valores validos: 0 al 0.16<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <!--********** Reteción ISR ********* -->\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-4 col-xs-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input\\n                        matInput\\n                        class=\\\"form-control\\\"\\n                        type=\\\"number\\\"\\n                        placeholder=\\\"Retención ISR.\\\"\\n                        formControlName=\\\"retencionisr\\\"\\n                      />\\n                    </mat-form-field>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('retencionisr').hasError('required') &&\\n                      newProductFG.get('retencionisr').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Debe indicar una cantidad de retención ISR.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('retencionisr').hasError('pattern') &&\\n                      newProductFG.get('retencionisr').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Solo se permiten números positivos, enteros y decimales.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG\\n                        .get('retencionisr')\\n                        .hasError('retencionisr') &&\\n                      !newProductFG.get('retencionisr').hasError('required') &&\\n                      newProductFG.get('retencionisr').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Valores validos: 0 al 0.35<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                </div>\\n\\n                <!--********** Reteción IEPS ********* -->\\n                <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-4 col-xs-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      Retención IEPS.\\n                      <input\\n                        type=\\\"radio\\\"\\n                        formControlName=\\\"RadioButtonRetencionIEPS\\\"\\n                        value=\\\"Tasa\\\"\\n                      />\\n                      Tasa\\n                      <input\\n                        type=\\\"radio\\\"\\n                        formControlName=\\\"RadioButtonRetencionIEPS\\\"\\n                        value=\\\"Cuota\\\"\\n                      />\\n                      Cuota\\n                      <input\\n                        matInput\\n                        class=\\\"form-control\\\"\\n                        type=\\\"number\\\"\\n                        formControlName=\\\"retencionieps\\\"\\n                      />\\n                    </mat-form-field>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('retencionieps').hasError('required') &&\\n                      newProductFG.get('retencionieps').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Debe indicar una cantidad de retención ISR.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                  <div\\n                    class=\\\"error\\\"\\n                    *ngIf=\\\"\\n                      newProductFG.get('retencionieps').hasError('pattern') &&\\n                      newProductFG.get('retencionieps').touched\\n                    \\\"\\n                  >\\n                    <p>\\n                      Solo se permiten números positivos, enteros y decimales.<i\\n                        class=\\\"material-icons\\\"\\n                        style=\\\"float: right\\\"\\n                        >warning</i\\n                      >\\n                    </p>\\n                  </div>\\n                  \\n                  <div\\n                  class=\\\"error\\\"\\n                  *ngIf=\\\"\\n                    newProductFG.get('retencionieps').hasError('retencionieps') &&\\n                    newProductFG.get('RadioButtonRetencionIEPS').value.includes('Tasa') &&\\n                    !newProductFG.get('retencionieps').hasError('required') &&\\n                    newProductFG.get('retencionieps').touched\\n                  \\\"\\n                >\\n                  <p>\\n                    Valores validos: 0.265, 0.3, 0.53, 0.5, 1.6, 0.304, 0.25, 0.09 0.08, 0.07, 0.06<i\\n                      class=\\\"material-icons\\\"\\n                      style=\\\"float: right\\\"\\n                      >warning</i\\n                    >\\n                  </p>\\n                </div>\\n\\n                <div\\n                class=\\\"error\\\"\\n                *ngIf=\\\"\\n                  newProductFG.get('retencionieps').hasError('retencioniepsc') &&\\n                  newProductFG.get('RadioButtonRetencionIEPS').value.includes('Cuota') &&\\n                  !newProductFG.get('retencionieps').hasError('required') &&\\n                  newProductFG.get('retencionieps').touched\\n                \\\"\\n              >\\n                <p>\\n                  Valores validos: 0 al 59.1449<i\\n                    class=\\\"material-icons\\\"\\n                    style=\\\"float: right\\\"\\n                    >warning</i\\n                  >\\n                </p>\\n              </div>\\n\\n                </div>\\n\\n                <p>Form value: {{ newProductFG.value | json }}</p>\\n                <p>Form Status: {{ newProductFG.status | json }}</p>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export class FileUpload {\r\n    key: string;\r\n    name: string;\r\n    url: string;\r\n    file: File;\r\n  \r\n    constructor(file: File) {\r\n      this.file = file;\r\n    }\r\n  }","import { Routes } from '@angular/router';\n\nimport { DashboardComponent } from '../../dashboard/dashboard.component';\nimport { UserProfileComponent } from '../../user-profile/user-profile.component';\nimport { TableListComponent } from '../../table-list/table-list.component';\nimport { TypographyComponent } from '../../typography/typography.component';\nimport { IconsComponent } from '../../icons/icons.component';\nimport { MapsComponent } from '../../maps/maps.component';\nimport { NotificationsComponent } from '../../notifications/notifications.component';\nimport { UpgradeComponent } from '../../upgrade/upgrade.component';\nimport { NewUserComponent } from '../../new-user/new-user.component';\nimport { ProductsComponent } from '../../products/products.component';\nimport { LoginComponent } from '../../login/login.component';\nimport { NewProductComponent } from '../../new-product/new-product.component';\nimport { CarritocomprasComponent } from '../../carritocompras/carritocompras.component';\nimport { FacturacionComponent } from '../../facturacion/facturacion.component';\nimport { ClientesComponent } from '../../clientes/clientes.component';\nimport { ConfiguracionComponent } from '../../configuracion/configuracion.component';\nimport { NewClientComponent } from '../../new-client/new-client.component';\nimport { LogoutComponent } from '../../logout/logout.component';\nimport { CfdiComponent } from '../../cfdi/cfdi.component';\nimport { MarcasComponent } from '../../marcas/marcas.component';\nimport { LineasComponent } from '../../lineas/lineas.component';\nimport { ListasComponent } from '../../listas/listas.component';\nimport { ListascompraComponent } from '../../listascompra/listascompra.component';\n\nimport { ProveedoresComponent } from '../../proveedores/proveedores.component';\nimport { ComprasComponent } from '../../compras/compras.component';\nimport { NewMarcaComponent } from '../../new-marca/new-marca.component';\nimport { NewLineaComponent } from '../../new-linea/new-linea.component';\n\nexport const AdminLayoutRoutes: Routes = [\n    // {\n    //   path: '',\n    //   children: [ {\n    //     path: 'dashboard',\n    //     component: DashboardComponent\n    // }]}, {\n    // path: '',\n    // children: [ {\n    //   path: 'userprofile',\n    //   component: UserProfileComponent\n    // }]\n    // }, {\n    //   path: '',\n    //   children: [ {\n    //     path: 'icons',\n    //     component: IconsComponent\n    //     }]\n    // }, {\n    //     path: '',\n    //     children: [ {\n    //         path: 'notifications',\n    //         component: NotificationsComponent\n    //     }]\n    // }, {\n    //     path: '',\n    //     children: [ {\n    //         path: 'maps',\n    //         component: MapsComponent\n    //     }]\n    // }, {\n    //     path: '',\n    //     children: [ {\n    //         path: 'typography',\n    //         component: TypographyComponent\n    //     }]\n    // }, {\n    //     path: '',\n    //     children: [ {\n    //         path: 'upgrade',\n    //         component: UpgradeComponent\n    //     }]\n    // }\n    { path: 'admin/dashboard',     component: DashboardComponent },\n    { path: 'admin/facturacion',   component: FacturacionComponent },\n    { path: 'admin/productos',     component: ProductsComponent },\n    { path: 'admin/clientes',      component: ClientesComponent },\n    { path: 'admin/marcas',      component: MarcasComponent },\n    { path: 'admin/lineas',      component: LineasComponent },\n    { path: 'admin/listas',      component: ListasComponent },\n    { path: 'admin/listascompra',      component: ListascompraComponent },\n\n    { path: 'admin/proveedores',      component: ProveedoresComponent },\n    { path: 'admin/compras',      component: ComprasComponent },\n    { path: 'admin/configuracion', component: ConfiguracionComponent },\n\n    { path: 'admin/new-product',   component: NewProductComponent },\n    { path: 'admin/new-product/:id',   component: NewProductComponent },\n\n    { path: 'admin/new-client',    component: NewClientComponent },\n    { path: 'admin/new-marca/:id',    component: NewMarcaComponent },\n    { path: 'admin/new-linea/:id',    component: NewLineaComponent },\n\n    { path: 'admin/logout',        component: LogoutComponent },\n    { path: 'admin/cfdi/:id',          component: CfdiComponent },\n\n\n\n    //{ path: 'new-user',       component: NewUserComponent },\n    //{ path: 'login',          component: LoginComponent },\n    //{ path: 'carrito',        component: CarritocomprasComponent },\n    //{ path: 'admin/table-list',     component: TableListComponent },\n    //{ path: 'typography',     component: TypographyComponent },\n    //{ path: 'icons',          component: IconsComponent },\n    //{ path: 'maps',           component: MapsComponent },\n    //{ path: 'notifications',  component: NotificationsComponent },\n    //{ path: 'upgrade',        component: UpgradeComponent },\n];\n","import {Injectable} from '@angular/core';\r\nimport {Apollo, gql} from 'apollo-angular';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n\r\nconst LISTAS = gql`\r\nquery Listas($search: String!, $tipolista: Int!) {\r\n    listas(search: $search, tipolista: $tipolista) {\r\n        id\r\n        descripcion\r\n        descuento\r\n        \r\n      }\r\n  }\r\n`;\r\n\r\n\r\n\r\n// 'idprod', 'codigosat', 'noidentificacion', 'claveunidad', 'descuento', 'trasladoiva', 'retiva', and 'ieps'\r\n//cambiarlo\r\nconst CREATELINK = gql` \r\n  mutation CreateLink($url: String!, $description: String!, $precio: Float!) {\r\n    createLink(url: $url, description: $description, precio: $precio, idprod:\"\", codigosat: \"\", noidentificacion: \"\", claveunidad: \"\", descuento: 0.00, trasladoiva: 0.00, retiva: 0.00, ieps: 0.00) {\r\n      id\r\n      url\r\n      description\r\n      precio\r\n   }\r\n  }\r\n  `;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class GraphqlListasService  {\r\n\r\n  loading: boolean;\r\n  posts: any;\r\n  //private querySubscription: Subscription;\r\n\r\n  constructor(private apollo: Apollo) {}\r\n\r\n\r\n  listas(mytoken: string, valor : string, tipolista : number) {\r\n    \r\n      return this.apollo.query({\r\n        query: LISTAS,\r\n        variables: {\r\n          search: valor,\r\n          tipolista: tipolista// obtirn data\r\n        }, \r\n        context: {\r\n          // example of setting the headers with context per operation\r\n          headers: new HttpHeaders().set('Authorization', 'JWT ' + mytoken),\r\n        },\r\n      });\r\n    //}\r\n  \r\n  }\r\n  \r\n  createLink(mytoken: string, url: string, description: string, precio: number) { //cambiar a create line\r\n       console.log(\"token auth = \" + mytoken);\r\n      return this.apollo.mutate({\r\n        mutation: CREATELINK,\r\n        variables: {\r\n          url: url,\r\n          description: description,\r\n          precio: precio\r\n        },\r\n        context: {\r\n          // example of setting the headers with context per operation\r\n          headers: new HttpHeaders().set('Authorization', 'JWT ' + mytoken),\r\n        },\r\n\r\n      });\r\n    \r\n  }\r\n   \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { GraphqlSalesService } from '../../services/graphql.sales.service';\r\nimport { StorageService } from \"../../services/storage.service\";\r\n\r\n@Component({\r\n  selector: 'app-facturacion',\r\n  templateUrl: './facturacion.component.html',\r\n  styleUrls: ['./facturacion.component.css']\r\n})\r\nexport class FacturacionComponent implements OnInit {\r\n\r\n  loading: boolean;\r\n  posts: any;\r\n  private querySubscription: Subscription;\r\n  user: string;\r\n  token: string;\r\n  valor: string;\r\n\r\n  constructor(private graphqlProductsService: GraphqlSalesService,\r\n              private storageService: StorageService) \r\n             {}\r\n\r\n  ngOnInit() {\r\n    \r\n    this.user = this.storageService.getSession(\"user\");\r\n    this.token = this.storageService.getSession(\"token\");\r\n    this.buscar(\"*\");\r\n  \r\n  }\r\n\r\n  search()\r\n  {\r\n    //alert(this.valor);\r\n    this.buscar(this.valor);\r\n  }\r\n\r\n  buscar(valor :string) {\r\n    //this.posts = [];\r\n    console.log(this.token);\r\n    console.log(valor);\r\n    \r\n    this.graphqlProductsService.sales(this.token, valor)\r\n    .subscribe(({ data, loading }) => {\r\n      this.loading = loading;\r\n      this.posts = JSON.parse(JSON.stringify(data)).sales;\r\n      console.log(JSON.stringify(this.posts))\r\n    });\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    //this.querySubscription.unsubscribe();\r\n  }\r\n  \r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        \\r\\n        <div class=\\\"input-group no-border\\\">\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"valor\\\" name=\\\"valor\\\" class=\\\"form-control\\\" placeholder=\\\"Buscar cliente, serie, folio, importe ...\\\">\\r\\n            <button mat-raised-button (click)=\\\"search()\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n                <i class=\\\"material-icons\\\">search</i>\\r\\n                <div class=\\\"ripple-container\\\"></div>\\r\\n            </button>\\r\\n            \\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n       \\r\\n            <div class=\\\"col-lg-12 col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-warning\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Listas de precio - \\r\\n                        \\r\\n                        <a  [routerLink]=\\\"['/admin/admin/new-product']\\\">\\r\\n                           <b> Crear lista nueva  </b>\\r\\n                        <i class=\\\"material-icons\\\">login</i>\\r\\n                           \\r\\n                        </a>\\r\\n                        </h4>\\r\\n                        \\r\\n                    </div>\\r\\n                    <div class=\\\"card-body table-responsive\\\">\\r\\n                        <table class=\\\"table table-hover\\\">\\r\\n                            <thead class=\\\"text-warning\\\">\\r\\n                                <th>Clave</th>\\r\\n                                <th>Nombre</th>\\r\\n                                <th>Descuento</th>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let product of posts\\\" >\\r\\n                                    <td>{{ product.id }}</td>\\r\\n                                    <td>{{ product.descripcion }}</td>\\r\\n                                    <td>{{ product.descuento }}</td>\\r\\n                                </tr>\\r\\n                              \\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3Rhc2NvbXByYS9saXN0YXNjb21wcmEuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin/admin/new-client']\\\">\\r\\n            <i class=\\\"material-icons\\\">login</i>\\r\\n            <p>\\r\\n                <span class=\\\"d-lg-none d-md-block\\\">Account</span>\\r\\n            </p>\\r\\n        </a>\\r\\n        <div class=\\\"row\\\">\\r\\n       \\r\\n            <div class=\\\"col-lg-12 col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-warning\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Clientes</h4>\\r\\n                        <p class=\\\"card-category\\\">New clients on 15th September, 2016</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body table-responsive\\\">\\r\\n                        <table class=\\\"table table-hover\\\">\\r\\n                            <thead class=\\\"text-warning\\\">\\r\\n                                <th>Clave</th>\\r\\n                                <th>rfc</th>\\r\\n                                <th>nombre</th>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let product of posts\\\" >\\r\\n                                    <td>{{ product.id }}</td>\\r\\n                                    <td>{{ product.rfc }}</td>\\r\\n                                    <td>{{ product.nombre }}</td>\\r\\n                                </tr>\\r\\n                              \\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CarritocomprasComponent } from 'app/carritocompras/carritocompras.component';\r\nimport * as Chartist from 'chartist';\r\nimport { Subscription } from 'rxjs';\r\nimport { GraphqlProductsService} from '../../services/graphql.products.service';\r\nimport { ShoppingCartService, CartItem, Totals } from '../../services/shopping-cart.service';\r\nimport { ShopItem } from '../../models/CartItem'\r\nimport { ProductApi } from '../../models/productapi'\r\nimport { LoginService } from \"../../services/login.service\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { NewUserComponent } from '../new-user/new-user.component';\r\nimport { LogoutComponent } from '../logout/logout.component';\r\nimport { StorageService } from \"../../services/storage.service\";\r\n\r\n@Component({\r\n  selector: 'app-compras',\r\n  templateUrl: './compras.component.html',\r\n  styleUrls: ['./compras.component.css']\r\n})\r\nexport class ComprasComponent implements OnInit, OnDestroy {\r\n\r\n    valor : string;\r\n    token : string;\r\n    user : string;\r\n    loading: boolean;\r\n    posts: any;\r\n    private querySubscription: Subscription;\r\n  \r\n    constructor(private graphqlProductsService: GraphqlProductsService,\r\n      private shoppingCartService: ShoppingCartService,\r\n      private loginService : LoginService,\r\n      private dialog : MatDialog,\r\n      private storageService : StorageService\r\n  \r\n      ) {}\r\n  \r\n    cartState$ = this.shoppingCartService.state$;\r\n    \r\n    addItemToCart(item: ProductApi) {\r\n      //alert(JSON.stringify(item));\r\n      var myItem = new ShopItem();\r\n      myItem.id = item.id;\r\n      myItem.name = item.description;\r\n      myItem.price = item.precio;\r\n      this.shoppingCartService.addCartItem(myItem);\r\n    }\r\n    \r\n    checkout(): void {\r\n      // this.shoppingCartService.checkout();\r\n      \r\n      let dialogRef = this.dialog.open(LoginComponent, {\r\n        // data: { state: this.state }, // now uses the observable\r\n        height: '400px',\r\n        width: '400px',\r\n      });\r\n    }\r\n  \r\n    logout(): void {\r\n      // this.shoppingCartService.checkout();\r\n      \r\n      let dialogRef = this.dialog.open(LogoutComponent, {\r\n        // data: { state: this.state }, // now uses the observable\r\n        height: '400px',\r\n        width: '400px',\r\n      });\r\n    }\r\n  \r\n    newuser(): void {\r\n      // this.shoppingCartService.checkout();\r\n      \r\n      let dialogRef = this.dialog.open(NewUserComponent, {\r\n        // data: { state: this.state }, // now uses the observable\r\n        height: '450px',\r\n        width: '400px',\r\n      });\r\n    }\r\n  \r\n    search()\r\n    {\r\n      //alert(this.valor);\r\n      this.buscar(this.valor);\r\n    }\r\n  \r\n    buscar(valor :string) {\r\n      //this.posts = [];\r\n      console.log(this.token);\r\n      console.log(valor);\r\n      \r\n     // alert(this.user + \" : \" +  valor + \"- \" + this.token);\r\n      \r\n      //this.querySubscription = \r\n      this.graphqlProductsService.links(this.token, valor)\r\n        //.valueChanges\r\n        .subscribe(({ data, loading }) => {\r\n          this.loading = loading;\r\n          this.posts = JSON.parse(JSON.stringify(data)).links;\r\n          console.log(JSON.stringify(this.posts))\r\n  \r\n        //  this.querySubscription.unsubscribe();\r\n        });\r\n  \r\n    }\r\n    remove(item: CartItem): void {\r\n      this.shoppingCartService.removeCartItem(item);\r\n    }\r\n    ngOnInit() {\r\n  /*\r\n      this.querySubscription = this.loginService.getData().subscribe(data => {\r\n        alert(\"print data\"+ data);\r\n        this.user = data.user;\r\n  \r\n        this.token = data.token;\r\n        console.log(\"user: \" + this.user);\r\n  \r\n        console.log(\"token: \" + this.token);\r\n      });\r\n  */\r\n      this.user = this.storageService.getSession(\"user\");\r\n      this.token = this.storageService.getSession(\"token\");\r\n     this.buscar(\"*\");\r\n    }\r\n  \r\n    ngOnDestroy() {\r\n      //this.querySubscription.unsubscribe();\r\n    }\r\n    \r\n    startAnimationForLineChart(chart){\r\n        let seq: any, delays: any, durations: any;\r\n        seq = 0;\r\n        delays = 80;\r\n        durations = 500;\r\n  \r\n        chart.on('draw', function(data) {\r\n          if(data.type === 'line' || data.type === 'area') {\r\n            data.element.animate({\r\n              d: {\r\n                begin: 600,\r\n                dur: 700,\r\n                from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\r\n                to: data.path.clone().stringify(),\r\n                easing: Chartist.Svg.Easing.easeOutQuint\r\n              }\r\n            });\r\n          } else if(data.type === 'point') {\r\n                seq++;\r\n                data.element.animate({\r\n                  opacity: {\r\n                    begin: seq * delays,\r\n                    dur: durations,\r\n                    from: 0,\r\n                    to: 1,\r\n                    easing: 'ease'\r\n                  }\r\n                });\r\n            }\r\n        });\r\n  \r\n        seq = 0;\r\n    };\r\n    startAnimationForBarChart(chart){\r\n        let seq2: any, delays2: any, durations2: any;\r\n  \r\n        seq2 = 0;\r\n        delays2 = 80;\r\n        durations2 = 500;\r\n        chart.on('draw', function(data) {\r\n          if(data.type === 'bar'){\r\n              seq2++;\r\n              data.element.animate({\r\n                opacity: {\r\n                  begin: seq2 * delays2,\r\n                  dur: durations2,\r\n                  from: 0,\r\n                  to: 1,\r\n                  easing: 'ease'\r\n                }\r\n              });\r\n          }\r\n        });\r\n  \r\n        seq2 = 0;\r\n    };\r\n  \r\n    }\r\n  ","export class MarcaApi {\r\n\tpublic constructor(init?: Partial<MarcaApi>){\r\n\t\tObject.assign(this,init);\r\n\t}\r\n\t\r\n\tid  : number;\r\n\tdescription : string;\r\n\t\r\n}  ","import {Injectable} from '@angular/core';\r\nimport {Apollo, gql} from 'apollo-angular';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n\r\nconst PROVEEDORES = gql`\r\n  query Proveedores ($search: String!) {\r\n    proveedores(search: $search) {\r\n        id\r\n        rfc\r\n        nombre\r\n        postedBy {\r\n          username\r\n        }\r\n        \r\n      }\r\n  }\r\n`;\r\n\r\n\r\nconst CREATEPROVEEDOR = gql`\r\n  mutation CreateLink($url: String!, $description: String!, $precio: Float!) {\r\n    createLink(url: $url, description: $description, precio: $precio, idprod:\"\", codigosat: \"\", noidentificacion: \"\", claveunidad: \"\", descuento: 0.00, trasladoiva: 0.00, retiva: 0.00, ieps: 0.00) {\r\n      id\r\n      url\r\n      description\r\n      precio\r\n   }\r\n  }\r\n  `;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class GraphqlProveedoresService  {\r\n\r\n  loading: boolean;\r\n  posts: any;\r\n  //private querySubscription: Subscription;\r\n\r\n  constructor(private apollo: Apollo) {}\r\n\r\n\r\n  proveedores(mytoken: string, valor : string) {\r\n    \r\n      return this.apollo.query({\r\n        query: PROVEEDORES,\r\n        variables: {\r\n          search: valor\r\n        }, \r\n        context: {\r\n          // example of setting the headers with context per operation\r\n          headers: new HttpHeaders().set('Authorization', 'JWT ' + mytoken),\r\n        },\r\n      });\r\n    //}\r\n  \r\n  }\r\n  \r\n  createProveedor(mytoken: string, url: string, description: string, precio: number) {\r\n       console.log(\"token auth = \" + mytoken);\r\n      return this.apollo.mutate({\r\n        mutation: CREATEPROVEEDOR,\r\n        variables: {\r\n          url: url,\r\n          description: description,\r\n          precio: precio\r\n        },\r\n        context: {\r\n          // example of setting the headers with context per operation\r\n          headers: new HttpHeaders().set('Authorization', 'JWT ' + mytoken),\r\n        },\r\n\r\n      });\r\n    \r\n  }\r\n   \r\n}\r\n","import { ConceptoImpuestos40 } from \"./conceptoimpuestos40\";\r\n\r\nexport class Concepto40 {\r\n    claveprodserv : string;\r\n    noidentificacion: string;\r\n    cantidad: string;\r\n    claveunidad: string;\r\n    unidad: string;\r\n    descripcion: string;\r\n    valorunitario: string;\r\n    importe: string;\r\n    descuento: string;\r\n    objetoimp : string;\r\n    impuestos : ConceptoImpuestos40\r\n}","import { Retencion40 } from \"./retencion40\";\r\nimport { Traslado40 } from \"./traslado40\"\r\n\r\nexport class CfdiImpuestos40 {\r\n    totalimpuestostrasladados : string;\r\n    traslados : Traslado40[];\r\n    totalimpuestosretenidos : string;\r\n    retenciones : Retencion40[];\r\n }","import {Injectable} from '@angular/core';\r\nimport {Apollo, gql} from 'apollo-angular';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n\r\nconst RECEPTOR = gql`\r\n  query Receptor ($search: String!) {\r\n    receptor(search: $search) {\r\n        id\r\n        rfc\r\n        nombre\r\n        direccion\r\n        email\r\n        usocfdi\r\n      }\r\n  }\r\n`;\r\n\r\n\r\n\r\n// 'idprod', 'codigosat', 'noidentificacion', 'claveunidad', 'descuento', 'trasladoiva', 'retiva', and 'ieps'\r\n\r\nconst CREATELINK = gql`\r\n  mutation CreateLink($url: String!, $description: String!, $precio: Float!) {\r\n    createLink(url: $url, description: $description, precio: $precio, idprod:\"\", codigosat: \"\", noidentificacion: \"\", claveunidad: \"\", descuento: 0.00, trasladoiva: 0.00, retiva: 0.00, ieps: 0.00) {\r\n      id\r\n      url\r\n      description\r\n      precio\r\n   }\r\n  }\r\n  `;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class GraphqlClientsService  {\r\n\r\n  loading: boolean;\r\n  posts: any;\r\n  //private querySubscription: Subscription;\r\n\r\n  constructor(private apollo: Apollo) {}\r\n\r\n\r\n  receptor(mytoken: string, valor : string) {\r\n    \r\n      return this.apollo.query({\r\n        query: RECEPTOR,\r\n        variables: {\r\n          search: valor\r\n        }, \r\n        context: {\r\n          // example of setting the headers with context per operation\r\n          headers: new HttpHeaders().set('Authorization', 'JWT ' + mytoken),\r\n        },\r\n      });\r\n    //}\r\n  \r\n  }\r\n  \r\n  createLink(mytoken: string, url: string, description: string, precio: number) {\r\n       console.log(\"token auth = \" + mytoken);\r\n      return this.apollo.mutate({\r\n        mutation: CREATELINK,\r\n        variables: {\r\n          url: url,\r\n          description: description,\r\n          precio: precio\r\n        },\r\n        context: {\r\n          // example of setting the headers with context per operation\r\n          headers: new HttpHeaders().set('Authorization', 'JWT ' + mytoken),\r\n        },\r\n\r\n      });\r\n    \r\n  }\r\n   \r\n}\r\n","export default \"\\r\\n\\r\\n<div class=\\\"main-content\\\">\\r\\n\\r\\n   \\r\\n    <div class=\\\"container-fluid\\\">\\r\\n  \\r\\n      <ng-container *ngIf=\\\"cartState$ | async as state\\\">\\r\\n       <!--\\r\\n        <form class=\\\"navbar-form\\\"> \\r\\n          <ng-container *ngIf=\\\"user\\\">\\r\\n  \\r\\n          Bienvenido: <b>{{user}}</b> \\r\\n  \\r\\n          Cerrar Sesion\\r\\n  \\r\\n          <button mat-raised-button (click)=\\\"logout()\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n             <i class=\\\"material-icons\\\">login</i>\\r\\n             <div class=\\\"ripple-container\\\"></div>\\r\\n          </button>\\r\\n  \\r\\n  \\r\\n          </ng-container>\\r\\n          \\r\\n          \\r\\n        </form> \\r\\n      -->\\r\\n        <ng-container *ngIf=\\\"user\\\">\\r\\n  \\r\\n          <app-cart [state]=\\\"state\\\"></app-cart> \\r\\n        </ng-container>\\r\\n  <!--\\r\\n        <ng-container *ngIf=\\\"!user\\\"> \\r\\n          Login para Comprar\\r\\n          <button mat-raised-button (click)=\\\"checkout()\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n             <i class=\\\"material-icons\\\">login</i>\\r\\n             <div class=\\\"ripple-container\\\"></div>\\r\\n          </button>\\r\\n  \\r\\n          o crear Nuevo usuario\\r\\n          <button mat-raised-button (click)=\\\"newuser()\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n             <i class=\\\"material-icons\\\">login</i>\\r\\n             <div class=\\\"ripple-container\\\"></div>\\r\\n          </button>\\r\\n        </ng-container>\\r\\n      -->\\r\\n      <mat-card>\\r\\n        <mat-card-header>\\r\\n            <mat-card-title>Total: {{ state.tot.subTot | currency:'USD':'symbol':'1.2-2' }}</mat-card-title>\\r\\n  \\r\\n            <mat-card-subtitle>\\r\\n                tax: {{ state.tot.tax | currency:'USD':'symbol':'1.2-2' }}\\r\\n                <br />\\r\\n          at checkout: {{ state.tot.grandTot | currency:'USD':'symbol':'1.2-2' }}\\r\\n        </mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n      <mat-card-actions>\\r\\n        <mat-chip-list>\\r\\n          <mat-chip *ngFor=\\\"let item of state.cart\\\" [removable]=\\\"true\\\" (removed)=\\\"remove(item)\\\">{{ item.name }}\\r\\n            <mat-icon matChipRemove>cancel</mat-icon>\\r\\n          </mat-chip>\\r\\n        </mat-chip-list>\\r\\n      </mat-card-actions>\\r\\n    </mat-card>\\r\\n      <hr />\\r\\n  <!--\\r\\n      <mat-card *ngFor=\\\"let item of state.store\\\">\\r\\n            <mat-card-header>\\r\\n                {{ item.name }}\\r\\n            </mat-card-header>\\t\\t\\r\\n        <mat-card-subtitle>\\r\\n          \\r\\n          <ul>\\r\\n            <li>{{ item.details }}</li>\\r\\n            <li>{{ item.price | currency:'USD':'symbol':'1.2-2' }}</li>\\r\\n          </ul>\\r\\n        </mat-card-subtitle>\\r\\n        <mat-card-actions>\\r\\n    \\r\\n            <button mat-flat-button color=\\\"primary\\\" role=\\\"button\\\" (click)=\\\"addItemToCart(item)\\\">\\r\\n          <mat-icon>add_shopping_cart</mat-icon>\\r\\n          Add to cart\\r\\n        </button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    -->\\r\\n    </ng-container>\\r\\n    \\r\\n    <div class=\\\"input-group no-border\\\">\\r\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"valor\\\" name=\\\"valor\\\" class=\\\"form-control\\\" placeholder=\\\"Buscar Producto o Codigo de Barras...\\\">\\r\\n      <button mat-raised-button (click)=\\\"search()\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n          <i class=\\\"material-icons\\\">search</i>\\r\\n          <div class=\\\"ripple-container\\\"></div>\\r\\n      </button>\\r\\n      \\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"row\\\"> \\r\\n    \\r\\n       \\r\\n              \\r\\n      <div class=\\\"col-md-2\\\" *ngFor=\\\"let product of posts\\\">\\r\\n      <div class=\\\"card card-chart\\\">\\r\\n          <!--     \\r\\n             <div class=\\\"card-header card-header-success\\\">\\r\\n                <img  width=\\\"50\\\" height=\\\"50\\\" src={{product.url}}>\\r\\n            Vendedor: {{product.postedBy.username}}\\r\\n  \\r\\n          </div>\\r\\n           -->\\r\\n          <div class=\\\"card-body\\\">\\r\\n  \\r\\n            <p class=\\\"card-category\\\">\\r\\n  \\r\\n                <span class=\\\"text-success\\\">\\r\\n                    <img  width=\\\"120\\\" height=\\\"120\\\" src={{product.url}}>\\r\\n                </span> \\r\\n            </p>    \\r\\n                <h4 class=\\\"card-title\\\">{{product.id}} - {{product.description}}</h4>\\r\\n  \\r\\n            \\r\\n            \\r\\n  \\r\\n              <p class=\\\"card-category\\\">\\r\\n                  <span class=\\\"text-success\\\"><i class=\\\"fa fa-long-arrow-up\\\"></i>  \\r\\n                  </span> Precio: ${{product.precio}} \\r\\n              </p>\\r\\n          </div>\\r\\n          <div class=\\\"card-footer\\\">\\r\\n            \\r\\n            <div class=\\\"stats\\\">\\r\\n  \\r\\n                <button mat-flat-button color=\\\"primary\\\" role=\\\"button\\\" (click)=\\\"addItemToCart(product)\\\">\\r\\n                    <mat-icon>add_shopping_cart</mat-icon>\\r\\n                    Add to cart\\r\\n                  </button>\\r\\n                <!--\\r\\n                <i class=\\\"material-icons text-danger\\\">warning</i>\\r\\n                <a href=\\\"javascript:void(0)\\\"> Comprar </a>\\r\\n            -->\\r\\n            </div>\\r\\n          </div>\\r\\n      </div>\\r\\n      </div>\\r\\n    \\r\\n  </div> \\r\\n     \\r\\n     \\r\\n      \\r\\n  </div>\\r\\n  </div>\\r\\n  \";","import { Component, OnInit } from '@angular/core';\r\nimport { GraphqlMarcasService} from '../../services/graphql.marcas.service';\r\nimport Swal from 'sweetalert2';\r\nimport { StorageService } from \"../../services/storage.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport internal from 'stream';\r\nimport { MarcaApi } from 'models/marcaapi';\r\n\r\n@Component({\r\n  selector: 'app-marcas',\r\n  templateUrl: './marcas.component.html',\r\n  styleUrls: ['./marcas.component.css']\r\n})\r\n\r\nexport class MarcasComponent implements OnInit {\r\n\r\n  myMarca = new MarcaApi();\r\n\r\n  loading: boolean;\r\n  posts: any;\r\n  //private querySubscription: Subscription;\r\n  user: string;\r\n  token: string;\r\n  valor: string;\r\n  //id: number; //del id que viene del html\r\n\r\n  constructor(\r\n    private graphqlMarca: GraphqlMarcasService,\r\n    private graphqlMarcasService: GraphqlMarcasService,\r\n    private storageService : StorageService,\r\n    private router : Router\r\n  ) \r\n  {}\r\n\r\n  ngOnInit() {\r\n    this.user = this.storageService.getSession(\"user\");\r\n    this.token = this.storageService.getSession(\"token\");\r\n   this.buscar(\"*\");\r\n  }\r\n\r\n  search()\r\n  {\r\n    //alert(this.valor);\r\n    this.buscar(this.valor);\r\n  }\r\n\r\n  buscar(valor :string) {\r\n    //this.posts = [];\r\n    //console.log(this.token);\r\n    //console.log(valor);\r\n\r\n    this.graphqlMarcasService.marcas(this.token, valor)\r\n    .subscribe(({ data, loading }) => {\r\n      this.loading = loading;\r\n      this.posts = JSON.parse(JSON.stringify(data)).marcas;\r\n      //console.log(JSON.stringify(this.posts))\r\n    });\r\n  }\r\n\r\n\r\n  deleteThisMarca(idMarca: number){//colocar el id de la marca a eliminar como parametro\r\n\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: 'btn btn-success',\r\n        cancelButton: 'btn btn-danger'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    \r\n    swalWithBootstrapButtons.fire({\r\n      title: '¿Estas seguro que quieres eliminar esta Marca?',\r\n      text: \"No podrás deshacer los cambios.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Si, eliminar',\r\n      cancelButtonText: 'No, cancelar',\r\n      reverseButtons: true\r\n    }).then((result) => {\r\n      \r\n      if (result.isConfirmed) {\r\n\r\n        console.log(\"Mande una orden a service con id: \"+idMarca);\r\n        this.myMarca.id = (this.myMarca.id)\r\n\r\n        this.graphqlMarcasService\r\n        .deleteMarca(\r\n          this.token, idMarca\r\n        )\r\n        .subscribe(\r\n          \r\n        )\r\n        swalWithBootstrapButtons.fire(\r\n          'Eliminado',\r\n          'Marca eliminada correctamente',\r\n          'success'\r\n        )\r\n      } else if (\r\n        /* Read more about handling dismissals below */\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        swalWithBootstrapButtons.fire(\r\n          'Cancelado',\r\n          'Operración cancelada',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  updateThisMarca(idMarca: number){\r\n    \r\n    this.router.navigate(['/admin/admin/new-marca/',idMarca]);\r\n    \r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n  }\r\n  \r\n}\r\n"],"sourceRoot":"webpack:///"}